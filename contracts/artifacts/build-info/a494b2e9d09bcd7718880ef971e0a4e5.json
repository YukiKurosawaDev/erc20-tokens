{
	"id": "a494b2e9d09bcd7718880ef971e0a4e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/YNPresalePair.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./YERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract YNPresalePair is ERC20, Ownable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    uint256 _buyFee=0;\r\n    uint256 _saleFee=0;\r\n    uint256 ETH=1 * 10 ** 18;\r\n\r\n    uint256 _maxBuy=0;\r\n    uint256 _maxSale=0;\r\n    uint8 _decimal=18;\r\n\r\n    constructor(address token,uint256 maxAmount,uint256 amountPerETH,uint maxBuy,uint maxSale) ERC20(\"Yuki Presale Pair\", \"YN-PPs\") {\r\n        _decimal=YERC20(token).decimals();\r\n        _mint(msg.sender, maxAmount * 10 ** _decimal);\r\n        _buyFee=ETH / amountPerETH;\r\n        _saleFee=ETH / amountPerETH;\r\n        _maxBuy=maxBuy;\r\n        _maxSale=maxSale;\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimal;\r\n    }\r\n\r\n    function transferTokenToUser(address user,uint256 money) public onlyOwner {\r\n        _transferTokenToUser(user,money);\r\n    }\r\n\r\n    function _transferTokenToUser(address user,uint256 money) private {\r\n        YERC20 yerc20=YERC20(address(this));\r\n        require(money<=yerc20.balanceOf(address(this)));\r\n        yerc20.transfer(user,money);\r\n    }\r\n\r\n    function buy() external payable{\r\n                \r\n        YERC20 yerc20=YERC20(address(this));       \r\n        \r\n        uint256 val=msg.value;\r\n       \r\n        uint256 tokenGet=val.mul(1 * 10 ** _decimal).div(_buyFee);\r\n        if(tokenGet <= _maxBuy){\r\n            if(tokenGet<=yerc20.balanceOf(address(this))){\r\n                _transferTokenToUser(msg.sender,tokenGet);\r\n            }\r\n            else{\r\n                payable(msg.sender).transfer(val);\r\n            }\r\n        }\r\n        else{\r\n            require(val<=_maxBuy,\"YNPresale: AMOUNT SALE AMOUNT EXCEED.\");\r\n        }\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {        \r\n        bool ret= super.transfer(recipient, amount);\r\n        \r\n        uint256 val=amount;\r\n        \r\n        if(recipient==address(this)){\r\n            uint256 tokenGet=val.mul(_saleFee).div(1 * 10 ** _decimal);\r\n            if(val <= _maxSale){\r\n                if(tokenGet<=address(this).balance){\r\n                    payable(msg.sender).transfer(tokenGet);\r\n                }\r\n                else{\r\n                    payable(msg.sender).transfer(val);\r\n                }\r\n            }\r\n            else{\r\n                require(val<=_maxSale,\"YNPresale: MAX SALE AMOUNT EXCEED.\");\r\n            }\r\n        }\r\n        \r\n        \r\n        return ret;\r\n    }\r\n\r\n    function transferBalanceToYuki(uint256 money) public onlyOwner {\r\n        require(money<=address(this).balance);\r\n        payable(owner()).transfer(money);\r\n    }\r\n    \r\n    function transferBalanceToUser(address user,uint256 money) public onlyOwner {\r\n        require(money<=address(this).balance);\r\n        payable(user).transfer(money);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/YERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface YERC20 {\r\n    /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n} "
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2034  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3316:3328  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3078:3169  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3160:3162  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3078:3169  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3467:3474  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4040:4047  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4077  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4093  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2195:2208  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2227:2232  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2220:2232  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4321:4325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4360:4367  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4369:4375  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4345  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4393:4397  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5007:5011  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5033:5039  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5041:5050  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5052:5058  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5032  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5070:5094  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5108  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5130  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5148:5174  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2974:2995   */\n      mstore\n        /* \"#utility.yul\":3031:3033   */\n      0x28\n        /* \"#utility.yul\":3011:3029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3004:3034   */\n      mstore\n        /* \"#utility.yul\":3070:3104   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3050:3068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3043:3105   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3121:3139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3114:3152   */\n      mstore\n        /* \"#utility.yul\":3169:3188   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5262:5268  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5303:5309  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5309  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5261  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5342  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5891  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5914  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:5878  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5917:5927  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5856  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2408:2421  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2440:2447  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2433:2447  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6536:6540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6590  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6613  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6631:6666  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3613:3634   */\n      mstore\n        /* \"#utility.yul\":3670:3672   */\n      0x25\n        /* \"#utility.yul\":3650:3668   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3673   */\n      mstore\n        /* \"#utility.yul\":3709:3743   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3689:3707   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3682:3744   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3760:3778   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3753:3788   */\n      mstore\n        /* \"#utility.yul\":3805:3824   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3429:3830   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6765:6772  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6793:6808  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6790  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6808  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6750  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6837:6841  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3807:3811  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3847:3856  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3858:3864  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3832  _transfer */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10150:10169  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4019:4040   */\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x24\n        /* \"#utility.yul\":4056:4074   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4049:4079   */\n      mstore\n        /* \"#utility.yul\":4115:4149   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4095:4113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4088:4150   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4166:4184   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4159:4193   */\n      mstore\n        /* \"#utility.yul\":4210:4229   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3835:4235   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10228:10249  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4442:4444   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4424:4445   */\n      mstore\n        /* \"#utility.yul\":4481:4483   */\n      0x22\n        /* \"#utility.yul\":4461:4479   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4454:4484   */\n      mstore\n        /* \"#utility.yul\":4520:4554   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4500:4518   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4493:4555   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4571:4589   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4564:4596   */\n      mstore\n        /* \"#utility.yul\":4613:4632   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4240:4638   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10310  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10326  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10335  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7457:7477  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4845:4847   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4827:4848   */\n      mstore\n        /* \"#utility.yul\":4884:4886   */\n      0x25\n        /* \"#utility.yul\":4864:4882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4857:4887   */\n      mstore\n        /* \"#utility.yul\":4923:4957   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4903:4921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4896:4958   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4974:4992   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4967:5002   */\n      mstore\n        /* \"#utility.yul\":5019:5038   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4643:5044   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7537:7560  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5251:5253   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5233:5254   */\n      mstore\n        /* \"#utility.yul\":5290:5292   */\n      0x23\n        /* \"#utility.yul\":5270:5288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5263:5293   */\n      mstore\n        /* \"#utility.yul\":5329:5363   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5309:5327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5302:5364   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5380:5398   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5373:5406   */\n      mstore\n        /* \"#utility.yul\":5423:5442   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":5049:5448   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7690  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7751  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5637:5658   */\n      mstore\n        /* \"#utility.yul\":5694:5696   */\n      0x26\n        /* \"#utility.yul\":5674:5692   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5667:5697   */\n      mstore\n        /* \"#utility.yul\":5733:5767   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5713:5731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5706:5768   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5784:5802   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5777:5813   */\n      mstore\n        /* \"#utility.yul\":5830:5849   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5453:5855   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7870  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7870  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7910  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7953:7962  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7945:7951  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7970  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:8035  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_140:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_140)\n    tag_142:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_143:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_137:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_145:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_147:\n        /* \"#utility.yul\":962:991   */\n      tag_148\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_137\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_152:\n        /* \"#utility.yul\":1612:1641   */\n      tag_153\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_154\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_137\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_157:\n        /* \"#utility.yul\":2100:2129   */\n      tag_158\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_160:\n        /* \"#utility.yul\":2308:2337   */\n      tag_161\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_137\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_162\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_137\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_164:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3199:3424   */\n    tag_91:\n        /* \"#utility.yul\":3239:3242   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup3\n        /* \"#utility.yul\":3266:3272   */\n      not\n        /* \"#utility.yul\":3263:3264   */\n      dup3\n        /* \"#utility.yul\":3260:3273   */\n      gt\n        /* \"#utility.yul\":3257:3393   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3315:3325   */\n      0x4e487b71\n        /* \"#utility.yul\":3310:3313   */\n      0xe0\n        /* \"#utility.yul\":3306:3326   */\n      shl\n        /* \"#utility.yul\":3303:3304   */\n      0x00\n        /* \"#utility.yul\":3296:3327   */\n      mstore\n        /* \"#utility.yul\":3350:3354   */\n      0x11\n        /* \"#utility.yul\":3347:3348   */\n      0x04\n        /* \"#utility.yul\":3340:3355   */\n      mstore\n        /* \"#utility.yul\":3378:3382   */\n      0x24\n        /* \"#utility.yul\":3375:3376   */\n      0x00\n        /* \"#utility.yul\":3368:3383   */\n      revert\n        /* \"#utility.yul\":3257:3393   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":3409:3418   */\n      add\n      swap1\n        /* \"#utility.yul\":3199:3424   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fce71f2ed2454868c9750dcc769c802e739610b68c102e58fd8096b25adbea5864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:8"
															},
															"nodeType": "YulIf",
															"src": "353:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:8"
															},
															"nodeType": "YulIf",
															"src": "536:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:8"
															},
															"nodeType": "YulIf",
															"src": "698:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:8",
																"statements": []
															},
															"src": "779:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:8"
															},
															"nodeType": "YulIf",
															"src": "921:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:8"
															},
															"nodeType": "YulIf",
															"src": "1164:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:8"
															},
															"nodeType": "YulIf",
															"src": "1301:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:8"
															},
															"nodeType": "YulIf",
															"src": "1474:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:8",
														"type": ""
													}
												],
												"src": "1036:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:8"
															},
															"nodeType": "YulIf",
															"src": "1746:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:8"
															},
															"nodeType": "YulIf",
															"src": "1816:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:8",
														"type": ""
													}
												],
												"src": "1603:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5438038062000b548339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c380620002916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610867565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610867565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b60208210810361086157634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088857634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fce71f2ed2454868c9750dcc769c802e739610b68c102e58fd8096b25adbea5864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB54 CODESIZE SUB DUP1 PUSH3 0xB54 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C3 DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xE7 0x1F 0x2E 0xD2 GASLIMIT BASEFEE PUSH9 0xC9750DCC769C802E73 SWAP7 LT 0xB6 DUP13 LT 0x2E PC REVERT DUP1 SWAP7 0xB2 GAS 0xDB 0xEA PC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "1388:10416:1:-:0;;;1963:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:1;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;1388:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1388:10416:1;;;-1:-1:-1;1388:10416:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1388:10416:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 1038,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_765": {
									"entryPoint": null,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_454": {
									"entryPoint": 1330,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_242": {
									"entryPoint": null,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_263": {
									"entryPoint": 600,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_377": {
									"entryPoint": 872,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_338": {
									"entryPoint": 797,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_159": {
									"entryPoint": 454,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_169": {
									"entryPoint": 857,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_311": {
									"entryPoint": 622,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_224": {
									"entryPoint": 1025,
									"id": 224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:8"
															},
															"nodeType": "YulIf",
															"src": "443:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:8"
															},
															"nodeType": "YulIf",
															"src": "713:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:8",
														"type": ""
													}
												],
												"src": "616:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:8"
															},
															"nodeType": "YulIf",
															"src": "891:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:8",
														"type": ""
													}
												],
												"src": "794:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:8",
														"type": ""
													}
												],
												"src": "1053:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:8",
														"type": ""
													}
												],
												"src": "1245:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:8"
															},
															"nodeType": "YulIf",
															"src": "1541:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:8",
														"type": ""
													}
												],
												"src": "1427:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:8",
														"type": ""
													}
												],
												"src": "1760:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:8"
															},
															"nodeType": "YulIf",
															"src": "2029:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:8",
														"type": ""
													}
												],
												"src": "1949:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:8"
															},
															"nodeType": "YulIf",
															"src": "2237:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:8",
														"type": ""
													}
												],
												"src": "2140:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:8"
															},
															"nodeType": "YulIf",
															"src": "2548:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:8"
															},
															"nodeType": "YulIf",
															"src": "2618:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:8",
														"type": ""
													}
												],
												"src": "2405:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:230:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2974:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3065:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3070:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:8"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3141:10:8",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3161:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3173:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3161:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2941:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2955:4:8",
														"type": ""
													}
												],
												"src": "2790:404:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3247:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3282:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3310:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3315:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3306:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3350:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3340:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3340:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3340:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3378:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3368:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3270:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3260:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:13:8"
															},
															"nodeType": "YulIf",
															"src": "3257:136:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3413:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3416:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3230:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3233:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3239:3:8",
														"type": ""
													}
												],
												"src": "3199:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3693:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3709:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3780:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3797:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3797:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3580:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3594:4:8",
														"type": ""
													}
												],
												"src": "3429:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4019:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4060:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4115:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4170:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4181:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4166:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4166:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4186:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4159:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4202:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4225:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3986:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4000:4:8",
														"type": ""
													}
												],
												"src": "3835:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4414:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4431:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4442:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4424:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4481:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4454:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4515:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4500:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4500:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4520:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4591:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4605:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4617:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4605:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4391:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4405:4:8",
														"type": ""
													}
												],
												"src": "4240:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4834:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4879:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4857:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4918:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4903:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4903:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4923:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4994:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4967:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5011:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5023:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5034:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5011:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4794:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4808:4:8",
														"type": ""
													}
												],
												"src": "4643:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5240:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5251:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5274:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5285:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5313:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5324:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5329:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5400:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5373:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5415:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5427:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5438:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5423:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5415:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5200:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5214:4:8",
														"type": ""
													}
												],
												"src": "5049:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5678:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5689:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5674:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5674:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5694:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5667:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5717:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5728:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5713:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5733:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5804:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5822:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5834:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5830:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5822:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5604:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5618:4:8",
														"type": ""
													}
												],
												"src": "5453:402:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610867565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610867565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b60208210810361086157634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088857634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fce71f2ed2454868c9750dcc769c802e739610b68c102e58fd8096b25adbea5864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xE7 0x1F 0x2E 0xD2 GASLIMIT BASEFEE PUSH9 0xC9750DCC769C802E73 SWAP7 LT 0xB6 DUP13 LT 0x2E PC REVERT DUP1 SWAP7 0xB2 GAS 0xDB 0xEA PC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "1388:10416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;4238:166:1;1053:187:8;3229:106:1;3316:12;;3229:106;;;1391:25:8;;;1379:2;1364:18;3229:106:1;1245:177:8;4871:478:1;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;1902:36:8;;1890:2;1875:18;3078:91:1;1760:184:8;5744:212:1;;;;;;:::i;:::-;;:::i;3393:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:1;3467:7;3493:18;;;;;;;;;;;;3393:125;2352:102;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:1;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;2141:98;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:4;4360:7:1;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:1;4238:166;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:1;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:4;5097:33:1;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:1;;2992:2:8;5140:79:1;;;2974:21:8;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:8;;;3114:38;3169:19;;5140:79:1;;;;;;;;;5253:57;5262:6;719:10:4;5303:6:1;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:1;;4871:478;-1:-1:-1;;;;4871:478:1:o;5744:212::-;719:10:4;5832:4:1;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:1;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:4;6536:4:1;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:1;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:1;;3631:2:8;6623:85:1;;;3613:21:8;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:8;;;3753:35;3805:19;;6623:85:1;3429:401:8;6623:85:1;6742:67;719:10:4;6765:7:1;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:1;;6443:405;-1:-1:-1;;;6443:405:1:o;3721:172::-;3807:4;3823:42;719:10:4;3847:9:1;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:1;;10142:68;;;;-1:-1:-1;;;10142:68:1;;4037:2:8;10142:68:1;;;4019:21:8;4076:2;4056:18;;;4049:30;4115:34;4095:18;;;4088:62;-1:-1:-1;;;4166:18:8;;;4159:34;4210:19;;10142:68:1;3835:400:8;10142:68:1;-1:-1:-1;;;;;10228:21:1;;10220:68;;;;-1:-1:-1;;;10220:68:1;;4442:2:8;10220:68:1;;;4424:21:8;4481:2;4461:18;;;4454:30;4520:34;4500:18;;;4493:62;-1:-1:-1;;;4571:18:8;;;4564:32;4613:19;;10220:68:1;4240:398:8;10220:68:1;-1:-1:-1;;;;;10299:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1391:25:8;;;10350:32:1;;1364:18:8;10350:32:1;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:1;;7449:70;;;;-1:-1:-1;;;7449:70:1;;4845:2:8;7449:70:1;;;4827:21:8;4884:2;4864:18;;;4857:30;4923:34;4903:18;;;4896:62;-1:-1:-1;;;4974:18:8;;;4967:35;5019:19;;7449:70:1;4643:401:8;7449:70:1;-1:-1:-1;;;;;7537:23:1;;7529:71;;;;-1:-1:-1;;;7529:71:1;;5251:2:8;7529:71:1;;;5233:21:8;5290:2;5270:18;;;5263:30;5329:34;5309:18;;;5302:62;-1:-1:-1;;;5380:18:8;;;5373:33;5423:19;;7529:71:1;5049:399:8;7529:71:1;-1:-1:-1;;;;;7693:17:1;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:1;;5655:2:8;7720:74:1;;;5637:21:8;5694:2;5674:18;;;5667:30;5733:34;5713:18;;;5706:62;-1:-1:-1;;;5784:18:8;;;5777:36;5830:19;;7720:74:1;5453:402:8;7720:74:1;-1:-1:-1;;;;;7828:17:1;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:1;7945:6;-1:-1:-1;;;;;7936:35:1;;7964:6;7936:35;;;;1391:25:8;;1379:2;1364:18;;1245:177;7936:35:1;;;;;;;;7439:596;7322:713;;;:::o;14:597:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:8;574:15;-1:-1:-1;;570:29:8;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:8:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:8;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:8:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:8:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:8;;3199:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fce71f2ed2454868c9750dcc769c802e739610b68c102e58fd8096b25adbea5864736f6c634300080d0033",
									".code": [
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2995,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 3743,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3753,
											"end": 3788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3429,
											"end": 3830,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4040,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4115,
											"end": 4149,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4088,
											"end": 4150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4159,
											"end": 4193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4210,
											"end": 4229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3835,
											"end": 4235,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 4483,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4484,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4554,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4493,
											"end": 4555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4596,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4613,
											"end": 4632,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4613,
											"end": 4632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4240,
											"end": 4638,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4847,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4848,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4857,
											"end": 4887,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5038,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5019,
											"end": 5038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4643,
											"end": 5044,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5254,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5263,
											"end": 5293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5364,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5049,
											"end": 5448,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5767,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5813,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5453,
											"end": 5855,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3310,
											"end": 3313,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3306,
											"end": 3326,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3383,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220087bbcf26e435ce4c8a5ac6a25748bb133dd06d79ff20c0d6b0c5747a4a35e9764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220087bbcf26e435ce4c8a5ac6a25748bb133dd06d79ff20c0d6b0c5747a4a35e9764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PUSH28 0xBCF26E435CE4C8A5AC6A25748BB133DD06D79FF20C0D6B0C5747A4A3 0x5E SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "467:6301:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220087bbcf26e435ce4c8a5ac6a25748bb133dd06d79ff20c0d6b0c5747a4a35e9764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD PUSH28 0xBCF26E435CE4C8A5AC6A25748BB133DD06D79FF20C0D6B0C5747A4A3 0x5E SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "467:6301:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220087bbcf26e435ce4c8a5ac6a25748bb133dd06d79ff20c0d6b0c5747a4a35e9764736f6c634300080d0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/YERC20.sol": {
				"YERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YERC20.sol\":\"YERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YERC20.sol\":{\"keccak256\":\"0x58a8d8467f806e2dffd63fd4b493b55bb949c03df5e313195aa034fe0ed1891f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f0610270ba22288a493ab92cf79fd9b487b26072690f01de66d477e61f60a5\",\"dweb:/ipfs/QmbACa6uJTGSCTsq36k8MXUhTC4px7pi3MfXVm3Qt2E8hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/YNPresalePair.sol": {
				"YNPresalePair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountPerETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxBuy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSale",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"name": "transferBalanceToUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"name": "transferBalanceToYuki",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"name": "transferTokenToUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/YNPresalePair.sol\":256:3063  contract YNPresalePair is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/YNPresalePair.sol\":357:358  0 */\n  0x00\n    /* \"contracts/YNPresalePair.sol\":341:358  uint256 _buyFee=0 */\n  0x06\n  dup2\n  swap1\n  sstore\n    /* \"contracts/YNPresalePair.sol\":365:383  uint256 _saleFee=0 */\n  0x07\n  dup2\n  swap1\n  sstore\n    /* \"contracts/YNPresalePair.sol\":402:414  1 * 10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/YNPresalePair.sol\":390:414  uint256 ETH=1 * 10 ** 18 */\n  0x08\n  sstore\n    /* \"contracts/YNPresalePair.sol\":423:440  uint256 _maxBuy=0 */\n  0x09\n  dup2\n  swap1\n  sstore\n    /* \"contracts/YNPresalePair.sol\":447:465  uint256 _maxSale=0 */\n  0x0a\n  sstore\n    /* \"contracts/YNPresalePair.sol\":472:489  uint8 _decimal=18 */\n  0x0b\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/YNPresalePair.sol\":487:489  18 */\n  0x12\n    /* \"contracts/YNPresalePair.sol\":472:489  uint8 _decimal=18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/YNPresalePair.sol\":498:861  constructor(address token,uint256 maxAmount,uint256 amountPerETH,uint maxBuy,uint maxSale) ERC20(\"Yuki Presale Pair\", \"YN-PPs\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x11\n  dup2\n  mstore\n  shl(0x79, 0x2cbab5b490283932b9b0b632902830b4b9)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x06\n  dup5\n  mstore\n  shl(0xd0, 0x594e2d505073)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  tag_8\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2034  _name */\n  0x03\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/YNPresalePair.sol\":653:658  token */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/YNPresalePair.sol\":646:668  YERC20(token).decimals */\n  and\n  0x313ce567\n    /* \"contracts/YNPresalePair.sol\":646:670  YERC20(token).decimals() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_18\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_18:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/YNPresalePair.sol\":637:645  _decimal */\n  0x0b\n    /* \"contracts/YNPresalePair.sol\":637:670  _decimal=YERC20(token).decimals() */\n  dup1\n  sload\n  not(0xff)\n  and\n  0xff\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  dup3\n  or\n  swap1\n  sstore\n    /* \"contracts/YNPresalePair.sol\":681:726  _mint(msg.sender, maxAmount * 10 ** _decimal) */\n  tag_21\n  swap1\n    /* \"contracts/YNPresalePair.sol\":687:697  msg.sender */\n  caller\n  swap1\n    /* \"contracts/YNPresalePair.sol\":711:725  10 ** _decimal */\n  tag_22\n  swap1\n    /* \"contracts/YNPresalePair.sol\":711:713  10 */\n  0x0a\n    /* \"contracts/YNPresalePair.sol\":711:725  10 ** _decimal */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"contracts/YNPresalePair.sol\":699:725  maxAmount * 10 ** _decimal */\n  tag_24\n  swap1\n    /* \"contracts/YNPresalePair.sol\":699:708  maxAmount */\n  dup8\n    /* \"contracts/YNPresalePair.sol\":699:725  maxAmount * 10 ** _decimal */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/YNPresalePair.sol\":681:686  _mint */\n  tag_26\n    /* \"contracts/YNPresalePair.sol\":681:726  _mint(msg.sender, maxAmount * 10 ** _decimal) */\n  jump\t// in\ntag_21:\n    /* \"contracts/YNPresalePair.sol\":751:763  amountPerETH */\n  dup3\n    /* \"contracts/YNPresalePair.sol\":745:748  ETH */\n  sload(0x08)\n    /* \"contracts/YNPresalePair.sol\":745:763  ETH / amountPerETH */\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"contracts/YNPresalePair.sol\":737:744  _buyFee */\n  0x06\n    /* \"contracts/YNPresalePair.sol\":737:763  _buyFee=ETH / amountPerETH */\n  sstore\n    /* \"contracts/YNPresalePair.sol\":783:786  ETH */\n  sload(0x08)\n    /* \"contracts/YNPresalePair.sol\":783:801  ETH / amountPerETH */\n  tag_29\n  swap1\n    /* \"contracts/YNPresalePair.sol\":789:801  amountPerETH */\n  dup5\n  swap1\n    /* \"contracts/YNPresalePair.sol\":783:801  ETH / amountPerETH */\n  tag_28\n  jump\t// in\ntag_29:\n    /* \"contracts/YNPresalePair.sol\":774:782  _saleFee */\n  0x07\n    /* \"contracts/YNPresalePair.sol\":774:801  _saleFee=ETH / amountPerETH */\n  sstore\n    /* \"contracts/YNPresalePair.sol\":812:819  _maxBuy */\n  0x09\n    /* \"contracts/YNPresalePair.sol\":812:826  _maxBuy=maxBuy */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/YNPresalePair.sol\":837:845  _maxSale */\n  0x0a\n    /* \"contracts/YNPresalePair.sol\":837:853  _maxSale=maxSale */\n  sstore\n  pop\n    /* \"contracts/YNPresalePair.sol\":256:3063  contract YNPresalePair is ERC20, Ownable {... */\n  tag_62\n  swap2\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8311:8700  function _mint(address account, uint256 amount) internal virtual {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8394:8415  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2945:2947   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2927:2948   */\n  mstore\n    /* \"#utility.yul\":2984:2986   */\n  0x1f\n    /* \"#utility.yul\":2964:2982   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2957:2987   */\n  mstore\n    /* \"#utility.yul\":3023:3056   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":3003:3021   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2996:3057   */\n  mstore\n    /* \"#utility.yul\":3074:3092   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8386:8451  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8538:8544  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8522:8534  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8522:8544  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8572  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8563  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8572  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8582  _balances[account] += amount */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8576:8582  amount */\n  dup4\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8563  _balances */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8582  _balances[account] += amount */\n  tag_41\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8576:8582  amount */\n  dup5\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8554:8582  _balances[account] += amount */\n  tag_40\n  jump\t// in\ntag_41:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":3382:3407   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8614:8615  0 */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":3370:3372   */\n  0x20\n    /* \"#utility.yul\":3355:3373   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8634  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8311:8700  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/YNPresalePair.sol\":256:3063  contract YNPresalePair is ERC20, Ownable {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  tag_48\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_51\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_54)\ntag_51:\n  dup3\n  0x1f\n  lt\n  tag_52\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_54)\ntag_52:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_54\n  jumpi\n  swap2\n  dup3\n  add\ntag_53:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_54\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_53)\ntag_54:\n  pop\n  tag_55\n  swap3\n  swap2\n  pop\n  tag_56\n  jump\t// in\ntag_55:\n  pop\n  swap1\n  jump\t// out\ntag_56:\ntag_57:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_55\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_57)\n    /* \"#utility.yul\":14:550   */\ntag_3:\n    /* \"#utility.yul\":120:126   */\n  0x00\n    /* \"#utility.yul\":128:134   */\n  dup1\n    /* \"#utility.yul\":136:142   */\n  0x00\n    /* \"#utility.yul\":144:150   */\n  dup1\n    /* \"#utility.yul\":152:158   */\n  0x00\n    /* \"#utility.yul\":205:208   */\n  0xa0\n    /* \"#utility.yul\":193:202   */\n  dup7\n    /* \"#utility.yul\":184:191   */\n  dup9\n    /* \"#utility.yul\":180:203   */\n  sub\n    /* \"#utility.yul\":176:209   */\n  slt\n    /* \"#utility.yul\":173:226   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":222:223   */\n  0x00\n    /* \"#utility.yul\":219:220   */\n  dup1\n    /* \"#utility.yul\":212:224   */\n  revert\n    /* \"#utility.yul\":173:226   */\ntag_64:\n    /* \"#utility.yul\":248:264   */\n  dup6\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":293:324   */\n  dup2\n  and\n    /* \"#utility.yul\":283:325   */\n  dup2\n  eq\n    /* \"#utility.yul\":273:343   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":339:340   */\n  0x00\n    /* \"#utility.yul\":336:337   */\n  dup1\n    /* \"#utility.yul\":329:341   */\n  revert\n    /* \"#utility.yul\":273:343   */\ntag_65:\n    /* \"#utility.yul\":407:409   */\n  0x20\n    /* \"#utility.yul\":392:410   */\n  dup8\n  add\n    /* \"#utility.yul\":386:411   */\n  mload\n    /* \"#utility.yul\":451:453   */\n  0x40\n    /* \"#utility.yul\":436:454   */\n  dup9\n  add\n    /* \"#utility.yul\":430:455   */\n  mload\n    /* \"#utility.yul\":495:497   */\n  0x60\n    /* \"#utility.yul\":480:498   */\n  dup10\n  add\n    /* \"#utility.yul\":474:499   */\n  mload\n    /* \"#utility.yul\":539:542   */\n  0x80\n    /* \"#utility.yul\":524:543   */\n  swap1\n  swap10\n  add\n    /* \"#utility.yul\":518:544   */\n  mload\n    /* \"#utility.yul\":362:367   */\n  swap3\n  swap11\n    /* \"#utility.yul\":386:411   */\n  swap2\n  swap10\n  pop\n    /* \"#utility.yul\":430:455   */\n  swap8\n    /* \"#utility.yul\":474:499   */\n  swap7\n  pop\n    /* \"#utility.yul\":518:544   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":14:550   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":555:828   */\ntag_20:\n    /* \"#utility.yul\":623:629   */\n  0x00\n    /* \"#utility.yul\":676:678   */\n  0x20\n    /* \"#utility.yul\":664:673   */\n  dup3\n    /* \"#utility.yul\":655:662   */\n  dup5\n    /* \"#utility.yul\":651:674   */\n  sub\n    /* \"#utility.yul\":647:679   */\n  slt\n    /* \"#utility.yul\":644:696   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":692:693   */\n  0x00\n    /* \"#utility.yul\":689:690   */\n  dup1\n    /* \"#utility.yul\":682:694   */\n  revert\n    /* \"#utility.yul\":644:696   */\ntag_67:\n    /* \"#utility.yul\":724:733   */\n  dup2\n    /* \"#utility.yul\":718:734   */\n  mload\n    /* \"#utility.yul\":774:778   */\n  0xff\n    /* \"#utility.yul\":767:772   */\n  dup2\n    /* \"#utility.yul\":763:779   */\n  and\n    /* \"#utility.yul\":756:761   */\n  dup2\n    /* \"#utility.yul\":753:780   */\n  eq\n    /* \"#utility.yul\":743:798   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":794:795   */\n  0x00\n    /* \"#utility.yul\":791:792   */\n  dup1\n    /* \"#utility.yul\":784:796   */\n  revert\n    /* \"#utility.yul\":743:798   */\ntag_68:\n    /* \"#utility.yul\":817:822   */\n  swap4\n    /* \"#utility.yul\":555:828   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":833:960   */\ntag_59:\n    /* \"#utility.yul\":894:904   */\n  0x4e487b71\n    /* \"#utility.yul\":889:892   */\n  0xe0\n    /* \"#utility.yul\":885:905   */\n  shl\n    /* \"#utility.yul\":882:883   */\n  0x00\n    /* \"#utility.yul\":875:906   */\n  mstore\n    /* \"#utility.yul\":925:929   */\n  0x11\n    /* \"#utility.yul\":922:923   */\n  0x04\n    /* \"#utility.yul\":915:930   */\n  mstore\n    /* \"#utility.yul\":949:953   */\n  0x24\n    /* \"#utility.yul\":946:947   */\n  0x00\n    /* \"#utility.yul\":939:954   */\n  revert\n    /* \"#utility.yul\":965:1387   */\ntag_60:\n    /* \"#utility.yul\":1054:1055   */\n  0x01\n    /* \"#utility.yul\":1097:1102   */\n  dup2\n    /* \"#utility.yul\":1054:1055   */\n  dup2\n    /* \"#utility.yul\":1111:1381   */\ntag_71:\n    /* \"#utility.yul\":1132:1139   */\n  dup1\n    /* \"#utility.yul\":1122:1130   */\n  dup6\n    /* \"#utility.yul\":1119:1140   */\n  gt\n    /* \"#utility.yul\":1111:1381   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1191:1195   */\n  dup2\n    /* \"#utility.yul\":1187:1188   */\n  0x00\n    /* \"#utility.yul\":1183:1189   */\n  not\n    /* \"#utility.yul\":1179:1196   */\n  div\n    /* \"#utility.yul\":1173:1177   */\n  dup3\n    /* \"#utility.yul\":1170:1197   */\n  gt\n    /* \"#utility.yul\":1167:1220   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1200:1218   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1250:1257   */\n  dup1\n    /* \"#utility.yul\":1240:1248   */\n  dup6\n    /* \"#utility.yul\":1236:1258   */\n  and\n    /* \"#utility.yul\":1233:1288   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1270:1286   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":1233:1288   */\ntag_76:\n    /* \"#utility.yul\":1349:1371   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":1309:1324   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":1111:1381   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":1115:1118   */\n  pop\n    /* \"#utility.yul\":965:1387   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1392:2198   */\ntag_61:\n    /* \"#utility.yul\":1441:1446   */\n  0x00\n    /* \"#utility.yul\":1471:1479   */\n  dup3\n    /* \"#utility.yul\":1461:1541   */\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":1512:1513   */\n  0x01\n    /* \"#utility.yul\":1526:1531   */\n  jump(tag_77)\n    /* \"#utility.yul\":1461:1541   */\ntag_78:\n    /* \"#utility.yul\":1560:1564   */\n  dup2\n    /* \"#utility.yul\":1550:1626   */\n  tag_79\n  jumpi\n  pop\n    /* \"#utility.yul\":1597:1598   */\n  0x00\n    /* \"#utility.yul\":1611:1616   */\n  jump(tag_77)\n    /* \"#utility.yul\":1550:1626   */\ntag_79:\n    /* \"#utility.yul\":1642:1646   */\n  dup2\n    /* \"#utility.yul\":1660:1661   */\n  0x01\n    /* \"#utility.yul\":1655:1714   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1728:1729   */\n  0x02\n    /* \"#utility.yul\":1723:1853   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1635:1853   */\n  jump(tag_80)\n    /* \"#utility.yul\":1655:1714   */\ntag_81:\n    /* \"#utility.yul\":1685:1686   */\n  0x01\n    /* \"#utility.yul\":1676:1686   */\n  swap2\n  pop\n    /* \"#utility.yul\":1699:1704   */\n  pop\n  jump(tag_77)\n    /* \"#utility.yul\":1723:1853   */\ntag_82:\n    /* \"#utility.yul\":1760:1763   */\n  0xff\n    /* \"#utility.yul\":1750:1758   */\n  dup5\n    /* \"#utility.yul\":1747:1764   */\n  gt\n    /* \"#utility.yul\":1744:1787   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":1767:1785   */\n  tag_84\n  tag_59\n  jump\t// in\ntag_84:\n  pop\n  pop\n    /* \"#utility.yul\":1823:1824   */\n  0x01\n    /* \"#utility.yul\":1809:1825   */\n  dup3\n  shl\n    /* \"#utility.yul\":1838:1843   */\n  jump(tag_77)\n    /* \"#utility.yul\":1635:1853   */\ntag_80:\n  pop\n    /* \"#utility.yul\":1937:1939   */\n  0x20\n    /* \"#utility.yul\":1927:1935   */\n  dup4\n    /* \"#utility.yul\":1924:1940   */\n  lt\n    /* \"#utility.yul\":1918:1921   */\n  0x0133\n    /* \"#utility.yul\":1912:1916   */\n  dup4\n    /* \"#utility.yul\":1909:1922   */\n  lt\n    /* \"#utility.yul\":1905:1941   */\n  and\n    /* \"#utility.yul\":1899:1901   */\n  0x4e\n    /* \"#utility.yul\":1889:1897   */\n  dup5\n    /* \"#utility.yul\":1886:1902   */\n  lt\n    /* \"#utility.yul\":1881:1883   */\n  0x0b\n    /* \"#utility.yul\":1875:1879   */\n  dup5\n    /* \"#utility.yul\":1872:1884   */\n  lt\n    /* \"#utility.yul\":1868:1903   */\n  and\n    /* \"#utility.yul\":1865:1942   */\n  or\n    /* \"#utility.yul\":1862:2021   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":1974:1993   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":2006:2011   */\n  jump(tag_77)\n    /* \"#utility.yul\":1862:2021   */\ntag_85:\n    /* \"#utility.yul\":2053:2087   */\n  tag_86\n    /* \"#utility.yul\":2078:2086   */\n  dup4\n    /* \"#utility.yul\":2072:2076   */\n  dup4\n    /* \"#utility.yul\":2053:2087   */\n  tag_60\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2123:2129   */\n  dup1\n    /* \"#utility.yul\":2119:2120   */\n  0x00\n    /* \"#utility.yul\":2115:2121   */\n  not\n    /* \"#utility.yul\":2111:2130   */\n  div\n    /* \"#utility.yul\":2102:2109   */\n  dup3\n    /* \"#utility.yul\":2099:2131   */\n  gt\n    /* \"#utility.yul\":2096:2154   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2134:2152   */\n  tag_88\n  tag_59\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2172:2192   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":1392:2198   */\ntag_77:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2203:2343   */\ntag_23:\n    /* \"#utility.yul\":2261:2266   */\n  0x00\n    /* \"#utility.yul\":2290:2337   */\n  tag_68\n    /* \"#utility.yul\":2331:2335   */\n  0xff\n    /* \"#utility.yul\":2321:2329   */\n  dup5\n    /* \"#utility.yul\":2317:2336   */\n  and\n    /* \"#utility.yul\":2311:2315   */\n  dup4\n    /* \"#utility.yul\":2290:2337   */\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":2348:2516   */\ntag_25:\n    /* \"#utility.yul\":2388:2395   */\n  0x00\n    /* \"#utility.yul\":2454:2455   */\n  dup2\n    /* \"#utility.yul\":2450:2451   */\n  0x00\n    /* \"#utility.yul\":2446:2452   */\n  not\n    /* \"#utility.yul\":2442:2456   */\n  div\n    /* \"#utility.yul\":2439:2440   */\n  dup4\n    /* \"#utility.yul\":2436:2457   */\n  gt\n    /* \"#utility.yul\":2431:2432   */\n  dup3\n    /* \"#utility.yul\":2424:2433   */\n  iszero\n    /* \"#utility.yul\":2417:2434   */\n  iszero\n    /* \"#utility.yul\":2413:2458   */\n  and\n    /* \"#utility.yul\":2410:2481   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":2461:2479   */\n  tag_93\n  tag_59\n  jump\t// in\ntag_93:\n  pop\n    /* \"#utility.yul\":2501:2510   */\n  mul\n  swap1\n    /* \"#utility.yul\":2348:2516   */\n  jump\t// out\n    /* \"#utility.yul\":2521:2738   */\ntag_28:\n    /* \"#utility.yul\":2561:2562   */\n  0x00\n    /* \"#utility.yul\":2587:2588   */\n  dup3\n    /* \"#utility.yul\":2577:2709   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2631:2641   */\n  0x4e487b71\n    /* \"#utility.yul\":2626:2629   */\n  0xe0\n    /* \"#utility.yul\":2622:2642   */\n  shl\n    /* \"#utility.yul\":2619:2620   */\n  0x00\n    /* \"#utility.yul\":2612:2643   */\n  mstore\n    /* \"#utility.yul\":2666:2670   */\n  0x12\n    /* \"#utility.yul\":2663:2664   */\n  0x04\n    /* \"#utility.yul\":2656:2671   */\n  mstore\n    /* \"#utility.yul\":2694:2698   */\n  0x24\n    /* \"#utility.yul\":2691:2692   */\n  0x00\n    /* \"#utility.yul\":2684:2699   */\n  revert\n    /* \"#utility.yul\":2577:2709   */\ntag_95:\n  pop\n    /* \"#utility.yul\":2723:2732   */\n  div\n  swap1\n    /* \"#utility.yul\":2521:2738   */\n  jump\t// out\n    /* \"#utility.yul\":3103:3231   */\ntag_40:\n    /* \"#utility.yul\":3143:3146   */\n  0x00\n    /* \"#utility.yul\":3174:3175   */\n  dup3\n    /* \"#utility.yul\":3170:3176   */\n  not\n    /* \"#utility.yul\":3167:3168   */\n  dup3\n    /* \"#utility.yul\":3164:3177   */\n  gt\n    /* \"#utility.yul\":3161:3200   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3180:3198   */\n  tag_99\n  tag_59\n  jump\t// in\ntag_99:\n  pop\n    /* \"#utility.yul\":3216:3225   */\n  add\n  swap1\n    /* \"#utility.yul\":3103:3231   */\n  jump\t// out\n    /* \"#utility.yul\":3418:3798   */\ntag_49:\n    /* \"#utility.yul\":3497:3498   */\n  0x01\n    /* \"#utility.yul\":3493:3505   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":3540:3552   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":3561:3622   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3615:3619   */\n  0x7f\n    /* \"#utility.yul\":3607:3613   */\n  dup3\n    /* \"#utility.yul\":3603:3620   */\n  and\n    /* \"#utility.yul\":3593:3620   */\n  swap2\n  pop\n    /* \"#utility.yul\":3561:3622   */\ntag_102:\n    /* \"#utility.yul\":3668:3670   */\n  0x20\n    /* \"#utility.yul\":3660:3666   */\n  dup3\n    /* \"#utility.yul\":3657:3671   */\n  lt\n    /* \"#utility.yul\":3637:3655   */\n  dup2\n    /* \"#utility.yul\":3634:3672   */\n  sub\n    /* \"#utility.yul\":3631:3792   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3714:3724   */\n  0x4e487b71\n    /* \"#utility.yul\":3709:3712   */\n  0xe0\n    /* \"#utility.yul\":3705:3725   */\n  shl\n    /* \"#utility.yul\":3702:3703   */\n  0x00\n    /* \"#utility.yul\":3695:3726   */\n  mstore\n    /* \"#utility.yul\":3749:3753   */\n  0x22\n    /* \"#utility.yul\":3746:3747   */\n  0x04\n    /* \"#utility.yul\":3739:3754   */\n  mstore\n    /* \"#utility.yul\":3777:3781   */\n  0x24\n    /* \"#utility.yul\":3774:3775   */\n  0x00\n    /* \"#utility.yul\":3767:3782   */\n  revert\n    /* \"#utility.yul\":3631:3792   */\ntag_103:\n  pop\n    /* \"#utility.yul\":3418:3798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_62:\n    /* \"contracts/YNPresalePair.sol\":256:3063  contract YNPresalePair is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/YNPresalePair.sol\":256:3063  contract YNPresalePair is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715994e3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4664ffea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x0510a5b3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/YNPresalePair.sol\":2888:3060  function transferBalanceToUser(address user,uint256 money) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3316:3328  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_31\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_34\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":869:968  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n        /* \"contracts/YNPresalePair.sol\":952:960  _decimal */\n      sload(0x0b)\n        /* \"contracts/YNPresalePair.sol\":869:968  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/YNPresalePair.sol\":952:960  _decimal */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"contracts/YNPresalePair.sol\":869:968  function decimals() public view virtual override returns (uint8) {... */\n      tag_31\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_34\n      tag_57\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":976:1101  function transferTokenToUser(address user,uint256 money) public onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_24\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_40\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3467:3474  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_24\n      tag_72\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":2714:2876  function transferBalanceToYuki(uint256 money) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_24\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2471:2522   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2459:2461   */\n      0x20\n        /* \"#utility.yul\":2444:2462   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_31\n        /* \"#utility.yul\":2325:2528   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_29\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_34\n      tag_89\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":1333:1930  function buy() external payable{... */\n    tag_16:\n      tag_24\n      tag_93\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":1938:2706  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {        ... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_34\n      tag_96\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_40\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4040:4047  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4077  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4093  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_24\n      tag_107\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":2888:3060  function transferBalanceToUser(address user,uint256 money) public onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/YNPresalePair.sol\":2990:3011  address(this).balance */\n      selfbalance\n        /* \"contracts/YNPresalePair.sol\":2983:2988  money */\n      dup2\n        /* \"contracts/YNPresalePair.sol\":2983:3011  money<=address(this).balance */\n      gt\n      iszero\n        /* \"contracts/YNPresalePair.sol\":2975:3012  require(money<=address(this).balance) */\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n        /* \"contracts/YNPresalePair.sol\":3023:3052  payable(user).transfer(money) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YNPresalePair.sol\":3023:3045  payable(user).transfer */\n      dup4\n      and\n      swap1\n        /* \"contracts/YNPresalePair.sol\":3023:3052  payable(user).transfer(money) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/YNPresalePair.sol\":3046:3051  money */\n      dup4\n      swap1\n        /* \"contracts/YNPresalePair.sol\":3023:3052  payable(user).transfer(money) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/YNPresalePair.sol\":3046:3051  money */\n      dup6\n        /* \"contracts/YNPresalePair.sol\":3023:3045  payable(user).transfer */\n      dup9\n        /* \"contracts/YNPresalePair.sol\":3023:3052  payable(user).transfer(money) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n        /* \"contracts/YNPresalePair.sol\":2888:3060  function transferBalanceToUser(address user,uint256 money) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2195:2208  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2227:2232  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2220:2232  return _name */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_122\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4321:4325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4360:4367  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4369:4375  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4345  _approve */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4393:4397  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_127:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5007:5011  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5033:5039  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5041:5050  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5052:5058  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5032  _transfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5070:5094  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5108  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5130  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5148:5174  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3746:3748   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3728:3749   */\n      mstore\n        /* \"#utility.yul\":3785:3787   */\n      0x28\n        /* \"#utility.yul\":3765:3783   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3758:3788   */\n      mstore\n        /* \"#utility.yul\":3824:3858   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3804:3822   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3797:3859   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3875:3893   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3868:3906   */\n      mstore\n        /* \"#utility.yul\":3923:3942   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_114\n        /* \"#utility.yul\":3544:3948   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5262:5268  sender */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5303:5309  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5309  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5261  _approve */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_139:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5342  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5891  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5914  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_128\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:5878  spender */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_146\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5917:5927  addedValue */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5856  _approve */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":976:1101  function transferTokenToUser(address user,uint256 money) public onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_151:\n        /* \"contracts/YNPresalePair.sol\":1061:1093  _transferTokenToUser(user,money) */\n      tag_154\n        /* \"contracts/YNPresalePair.sol\":1082:1086  user */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":1087:1092  money */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":1061:1081  _transferTokenToUser */\n      tag_155\n        /* \"contracts/YNPresalePair.sol\":1061:1093  _transferTokenToUser(user,money) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/YNPresalePair.sol\":976:1101  function transferTokenToUser(address user,uint256 money) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/YNPresalePair.sol\":2714:2876  function transferBalanceToYuki(uint256 money) public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"contracts/YNPresalePair.sol\":2803:2824  address(this).balance */\n      selfbalance\n        /* \"contracts/YNPresalePair.sol\":2796:2801  money */\n      dup2\n        /* \"contracts/YNPresalePair.sol\":2796:2824  money<=address(this).balance */\n      gt\n      iszero\n        /* \"contracts/YNPresalePair.sol\":2788:2825  require(money<=address(this).balance) */\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x05)\n        /* \"contracts/YNPresalePair.sol\":2836:2868  payable(owner()).transfer(money) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2836:2868  payable(owner()).transfer(money) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2862:2867  money */\n      dup4\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2836:2868  payable(owner()).transfer(money) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/YNPresalePair.sol\":2862:2867  money */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup9\n        /* \"contracts/YNPresalePair.sol\":2836:2868  payable(owner()).transfer(money) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2408:2421  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2440:2447  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2433:2447  return _symbol */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6536:6540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6590  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6613  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6631:6666  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4420:4422   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4402:4423   */\n      mstore\n        /* \"#utility.yul\":4459:4461   */\n      0x25\n        /* \"#utility.yul\":4439:4457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4432:4462   */\n      mstore\n        /* \"#utility.yul\":4498:4532   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4478:4496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4471:4533   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4549:4567   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4542:4577   */\n      mstore\n        /* \"#utility.yul\":4594:4613   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_114\n        /* \"#utility.yul\":4218:4619   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6765:6772  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6793:6808  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6790  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6808  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6750  _approve */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_187:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6837:6841  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YNPresalePair.sol\":1333:1930  function buy() external payable{... */\n    tag_93:\n        /* \"contracts/YNPresalePair.sol\":1546:1553  _buyFee */\n      sload(0x06)\n        /* \"contracts/YNPresalePair.sol\":1532:1540  _decimal */\n      sload(0x0b)\n        /* \"contracts/YNPresalePair.sol\":1422:1426  this */\n      address\n      swap2\n        /* \"contracts/YNPresalePair.sol\":1468:1477  msg.value */\n      callvalue\n      swap2\n        /* \"contracts/YNPresalePair.sol\":1393:1406  YERC20 yerc20 */\n      0x00\n      swap2\n        /* \"contracts/YNPresalePair.sol\":1514:1554  val.mul(1 * 10 ** _decimal).div(_buyFee) */\n      tag_190\n      swap2\n        /* \"contracts/YNPresalePair.sol\":1514:1541  val.mul(1 * 10 ** _decimal) */\n      tag_191\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1526:1540  10 ** _decimal */\n      tag_192\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1532:1540  _decimal */\n      0xff\n      and\n        /* \"contracts/YNPresalePair.sol\":1526:1528  10 */\n      0x0a\n        /* \"contracts/YNPresalePair.sol\":1526:1540  10 ** _decimal */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"contracts/YNPresalePair.sol\":1522:1540  1 * 10 ** _decimal */\n      tag_194\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1522:1523  1 */\n      0x01\n        /* \"contracts/YNPresalePair.sol\":1522:1540  1 * 10 ** _decimal */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"contracts/YNPresalePair.sol\":1514:1517  val */\n      dup6\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1514:1521  val.mul */\n      tag_196\n        /* \"contracts/YNPresalePair.sol\":1514:1541  val.mul(1 * 10 ** _decimal) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/YNPresalePair.sol\":1514:1545  val.mul(1 * 10 ** _decimal).div */\n      swap1\n      tag_197\n        /* \"contracts/YNPresalePair.sol\":1514:1554  val.mul(1 * 10 ** _decimal).div(_buyFee) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/YNPresalePair.sol\":1497:1554  uint256 tokenGet=val.mul(1 * 10 ** _decimal).div(_buyFee) */\n      swap1\n      pop\n        /* \"contracts/YNPresalePair.sol\":1580:1587  _maxBuy */\n      sload(0x09)\n        /* \"contracts/YNPresalePair.sol\":1568:1576  tokenGet */\n      dup2\n        /* \"contracts/YNPresalePair.sol\":1568:1587  tokenGet <= _maxBuy */\n      gt\n        /* \"contracts/YNPresalePair.sol\":1565:1923  if(tokenGet <= _maxBuy){... */\n      tag_198\n      jumpi\n        /* \"contracts/YNPresalePair.sol\":1616:1647  yerc20.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/YNPresalePair.sol\":1641:1645  this */\n      address\n        /* \"contracts/YNPresalePair.sol\":1616:1647  yerc20.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2471:2522   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YNPresalePair.sol\":1616:1632  yerc20.balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2444:2462   */\n      0x24\n      add\n        /* \"contracts/YNPresalePair.sol\":1616:1647  yerc20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"contracts/YNPresalePair.sol\":1606:1614  tokenGet */\n      dup2\n        /* \"contracts/YNPresalePair.sol\":1606:1647  tokenGet<=yerc20.balanceOf(address(this)) */\n      gt\n        /* \"contracts/YNPresalePair.sol\":1603:1810  if(tokenGet<=yerc20.balanceOf(address(this))){... */\n      tag_204\n      jumpi\n        /* \"contracts/YNPresalePair.sol\":1667:1708  _transferTokenToUser(msg.sender,tokenGet) */\n      tag_119\n        /* \"contracts/YNPresalePair.sol\":1688:1698  msg.sender */\n      caller\n        /* \"contracts/YNPresalePair.sol\":1699:1707  tokenGet */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":1667:1687  _transferTokenToUser */\n      tag_155\n        /* \"contracts/YNPresalePair.sol\":1667:1708  _transferTokenToUser(msg.sender,tokenGet) */\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":1603:1810  if(tokenGet<=yerc20.balanceOf(address(this))){... */\n    tag_204:\n        /* \"contracts/YNPresalePair.sol\":1761:1794  payable(msg.sender).transfer(val) */\n      mload(0x40)\n        /* \"contracts/YNPresalePair.sol\":1769:1779  msg.sender */\n      caller\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1761:1794  payable(msg.sender).transfer(val) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1790:1793  val */\n      dup5\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1761:1794  payable(msg.sender).transfer(val) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/YNPresalePair.sol\":1790:1793  val */\n      dup6\n        /* \"contracts/YNPresalePair.sol\":1769:1779  msg.sender */\n      dup9\n        /* \"contracts/YNPresalePair.sol\":1761:1794  payable(msg.sender).transfer(val) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n        /* \"contracts/YNPresalePair.sol\":3023:3052  payable(user).transfer(money) */\n      pop\n        /* \"contracts/YNPresalePair.sol\":2888:3060  function transferBalanceToUser(address user,uint256 money) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YNPresalePair.sol\":1565:1923  if(tokenGet <= _maxBuy){... */\n    tag_198:\n        /* \"contracts/YNPresalePair.sol\":1863:1870  _maxBuy */\n      sload(0x09)\n        /* \"contracts/YNPresalePair.sol\":1858:1861  val */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":1858:1870  val<=_maxBuy */\n      gt\n      iszero\n        /* \"contracts/YNPresalePair.sol\":1850:1911  require(val<=_maxBuy,\"YNPresale: AMOUNT SALE AMOUNT EXCEED.\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6571:6573   */\n      0x20\n        /* \"contracts/YNPresalePair.sol\":1850:1911  require(val<=_maxBuy,\"YNPresale: AMOUNT SALE AMOUNT EXCEED.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6553:6574   */\n      mstore\n        /* \"#utility.yul\":6610:6612   */\n      0x25\n        /* \"#utility.yul\":6590:6608   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6583:6613   */\n      mstore\n        /* \"#utility.yul\":6649:6683   */\n      0x594e50726573616c653a20414d4f554e542053414c4520414d4f554e54204558\n        /* \"#utility.yul\":6629:6647   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6622:6684   */\n      mstore\n      shl(0xd9, 0x21a2a2a217)\n        /* \"#utility.yul\":6700:6718   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6693:6728   */\n      mstore\n        /* \"#utility.yul\":6745:6764   */\n      0x84\n      add\n        /* \"contracts/YNPresalePair.sol\":1850:1911  require(val<=_maxBuy,\"YNPresale: AMOUNT SALE AMOUNT EXCEED.\") */\n      tag_114\n        /* \"#utility.yul\":6369:6770   */\n      jump\n        /* \"contracts/YNPresalePair.sol\":1938:2706  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {        ... */\n    tag_97:\n        /* \"contracts/YNPresalePair.sol\":2024:2028  bool */\n      0x00\n        /* \"contracts/YNPresalePair.sol\":2049:2057  bool ret */\n      dup1\n        /* \"contracts/YNPresalePair.sol\":2059:2092  super.transfer(recipient, amount) */\n      tag_214\n        /* \"contracts/YNPresalePair.sol\":2074:2083  recipient */\n      dup5\n        /* \"contracts/YNPresalePair.sol\":2085:2091  amount */\n      dup5\n        /* \"contracts/YNPresalePair.sol\":2059:2073  super.transfer */\n      tag_215\n        /* \"contracts/YNPresalePair.sol\":2059:2092  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/YNPresalePair.sol\":2049:2092  bool ret= super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/YNPresalePair.sol\":2125:2131  amount */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":2174:2178  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YNPresalePair.sol\":2155:2179  recipient==address(this) */\n      dup7\n      and\n      sub\n        /* \"contracts/YNPresalePair.sol\":2152:2658  if(recipient==address(this)){... */\n      tag_216\n      jumpi\n        /* \"contracts/YNPresalePair.sol\":2244:2252  _decimal */\n      sload(0x0b)\n        /* \"contracts/YNPresalePair.sol\":2195:2211  uint256 tokenGet */\n      0x00\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2212:2253  val.mul(_saleFee).div(1 * 10 ** _decimal) */\n      tag_217\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2238:2252  10 ** _decimal */\n      tag_218\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2244:2252  _decimal */\n      0xff\n      and\n        /* \"contracts/YNPresalePair.sol\":2238:2240  10 */\n      0x0a\n        /* \"contracts/YNPresalePair.sol\":2238:2252  10 ** _decimal */\n      tag_193\n      jump\t// in\n    tag_218:\n        /* \"contracts/YNPresalePair.sol\":2234:2252  1 * 10 ** _decimal */\n      tag_219\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2234:2235  1 */\n      0x01\n        /* \"contracts/YNPresalePair.sol\":2234:2252  1 * 10 ** _decimal */\n      tag_195\n      jump\t// in\n    tag_219:\n        /* \"contracts/YNPresalePair.sol\":2220:2228  _saleFee */\n      sload(0x07)\n        /* \"contracts/YNPresalePair.sol\":2212:2229  val.mul(_saleFee) */\n      tag_191\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2212:2215  val */\n      dup6\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2212:2219  val.mul */\n      tag_196\n        /* \"contracts/YNPresalePair.sol\":2212:2229  val.mul(_saleFee) */\n      jump\t// in\n        /* \"contracts/YNPresalePair.sol\":2212:2253  val.mul(_saleFee).div(1 * 10 ** _decimal) */\n    tag_217:\n        /* \"contracts/YNPresalePair.sol\":2195:2253  uint256 tokenGet=val.mul(_saleFee).div(1 * 10 ** _decimal) */\n      swap1\n      pop\n        /* \"contracts/YNPresalePair.sol\":2278:2286  _maxSale */\n      sload(0x0a)\n        /* \"contracts/YNPresalePair.sol\":2271:2274  val */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":2271:2286  val <= _maxSale */\n      gt\n        /* \"contracts/YNPresalePair.sol\":2268:2647  if(val <= _maxSale){... */\n      tag_221\n      jumpi\n        /* \"contracts/YNPresalePair.sol\":2319:2340  address(this).balance */\n      selfbalance\n        /* \"contracts/YNPresalePair.sol\":2309:2317  tokenGet */\n      dup2\n        /* \"contracts/YNPresalePair.sol\":2309:2340  tokenGet<=address(this).balance */\n      gt\n        /* \"contracts/YNPresalePair.sol\":2306:2520  if(tokenGet<=address(this).balance){... */\n      tag_222\n      jumpi\n        /* \"contracts/YNPresalePair.sol\":2364:2402  payable(msg.sender).transfer(tokenGet) */\n      mload(0x40)\n        /* \"contracts/YNPresalePair.sol\":2372:2382  msg.sender */\n      caller\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2364:2402  payable(msg.sender).transfer(tokenGet) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2393:2401  tokenGet */\n      dup4\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2364:2402  payable(msg.sender).transfer(tokenGet) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/YNPresalePair.sol\":2393:2401  tokenGet */\n      dup6\n        /* \"contracts/YNPresalePair.sol\":2372:2382  msg.sender */\n      dup9\n        /* \"contracts/YNPresalePair.sol\":2364:2402  payable(msg.sender).transfer(tokenGet) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n        /* \"contracts/YNPresalePair.sol\":2268:2647  if(val <= _maxSale){... */\n      jump(tag_229)\n        /* \"contracts/YNPresalePair.sol\":2306:2520  if(tokenGet<=address(this).balance){... */\n    tag_222:\n        /* \"contracts/YNPresalePair.sol\":2467:2500  payable(msg.sender).transfer(val) */\n      mload(0x40)\n        /* \"contracts/YNPresalePair.sol\":2475:2485  msg.sender */\n      caller\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2467:2500  payable(msg.sender).transfer(val) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2496:2499  val */\n      dup5\n      swap1\n        /* \"contracts/YNPresalePair.sol\":2467:2500  payable(msg.sender).transfer(val) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/YNPresalePair.sol\":2496:2499  val */\n      dup6\n        /* \"contracts/YNPresalePair.sol\":2475:2485  msg.sender */\n      dup9\n        /* \"contracts/YNPresalePair.sol\":2467:2500  payable(msg.sender).transfer(val) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"contracts/YNPresalePair.sol\":2268:2647  if(val <= _maxSale){... */\n    tag_221:\n        /* \"contracts/YNPresalePair.sol\":2585:2593  _maxSale */\n      sload(0x0a)\n        /* \"contracts/YNPresalePair.sol\":2580:2583  val */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":2580:2593  val<=_maxSale */\n      gt\n      iszero\n        /* \"contracts/YNPresalePair.sol\":2572:2631  require(val<=_maxSale,\"YNPresale: MAX SALE AMOUNT EXCEED.\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6977:6979   */\n      0x20\n        /* \"contracts/YNPresalePair.sol\":2572:2631  require(val<=_maxSale,\"YNPresale: MAX SALE AMOUNT EXCEED.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6959:6980   */\n      mstore\n        /* \"#utility.yul\":7016:7018   */\n      0x22\n        /* \"#utility.yul\":6996:7014   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6989:7019   */\n      mstore\n        /* \"#utility.yul\":7055:7089   */\n      0x594e50726573616c653a204d41582053414c4520414d4f554e54204558434545\n        /* \"#utility.yul\":7035:7053   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7028:7090   */\n      mstore\n      shl(0xf1, 0x2217)\n        /* \"#utility.yul\":7106:7124   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7099:7131   */\n      mstore\n        /* \"#utility.yul\":7148:7167   */\n      0x84\n      add\n        /* \"contracts/YNPresalePair.sol\":2572:2631  require(val<=_maxSale,\"YNPresale: MAX SALE AMOUNT EXCEED.\") */\n      tag_114\n        /* \"#utility.yul\":6775:7173   */\n      jump\n        /* \"contracts/YNPresalePair.sol\":2572:2631  require(val<=_maxSale,\"YNPresale: MAX SALE AMOUNT EXCEED.\") */\n    tag_229:\n        /* \"contracts/YNPresalePair.sol\":2180:2658  {... */\n      pop\n        /* \"contracts/YNPresalePair.sol\":2152:2658  if(recipient==address(this)){... */\n    tag_216:\n      pop\n        /* \"contracts/YNPresalePair.sol\":2695:2698  ret */\n      swap4\n        /* \"contracts/YNPresalePair.sol\":1938:2706  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {        ... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7380:7382   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7362:7383   */\n      mstore\n        /* \"#utility.yul\":7419:7421   */\n      0x26\n        /* \"#utility.yul\":7399:7417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7392:7422   */\n      mstore\n        /* \"#utility.yul\":7458:7492   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7438:7456   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7431:7493   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7509:7527   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7502:7538   */\n      mstore\n        /* \"#utility.yul\":7555:7574   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_114\n        /* \"#utility.yul\":7178:7580   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10150:10169  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7787:7789   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7769:7790   */\n      mstore\n        /* \"#utility.yul\":7826:7828   */\n      0x24\n        /* \"#utility.yul\":7806:7824   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7799:7829   */\n      mstore\n        /* \"#utility.yul\":7865:7899   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7845:7863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7838:7900   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7916:7934   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7909:7943   */\n      mstore\n        /* \"#utility.yul\":7960:7979   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_114\n        /* \"#utility.yul\":7585:7985   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10228:10249  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8192:8194   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8174:8195   */\n      mstore\n        /* \"#utility.yul\":8231:8233   */\n      0x22\n        /* \"#utility.yul\":8211:8229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8204:8234   */\n      mstore\n        /* \"#utility.yul\":8270:8304   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8250:8268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8243:8305   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":8321:8339   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8314:8346   */\n      mstore\n        /* \"#utility.yul\":8363:8382   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_114\n        /* \"#utility.yul\":7990:8388   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10310  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10326  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10335  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7457:7477  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8595:8597   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8577:8598   */\n      mstore\n        /* \"#utility.yul\":8634:8636   */\n      0x25\n        /* \"#utility.yul\":8614:8632   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8607:8637   */\n      mstore\n        /* \"#utility.yul\":8673:8707   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":8653:8671   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8646:8708   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8724:8742   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8717:8752   */\n      mstore\n        /* \"#utility.yul\":8769:8788   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_114\n        /* \"#utility.yul\":8393:8794   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7537:7560  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9001:9003   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8983:9004   */\n      mstore\n        /* \"#utility.yul\":9040:9042   */\n      0x23\n        /* \"#utility.yul\":9020:9038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9013:9043   */\n      mstore\n        /* \"#utility.yul\":9079:9113   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9059:9077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9052:9114   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9130:9148   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9123:9156   */\n      mstore\n        /* \"#utility.yul\":9173:9192   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_114\n        /* \"#utility.yul\":8799:9198   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7690  uint256 senderBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7751  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9405:9407   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9387:9408   */\n      mstore\n        /* \"#utility.yul\":9444:9446   */\n      0x26\n        /* \"#utility.yul\":9424:9442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9417:9447   */\n      mstore\n        /* \"#utility.yul\":9483:9517   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":9463:9481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9456:9518   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":9534:9552   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9527:9563   */\n      mstore\n        /* \"#utility.yul\":9580:9599   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_114\n        /* \"#utility.yul\":9203:9605   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7870  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7870  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7910  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_264\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_147\n      jump\t// in\n    tag_264:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7953:7962  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7945:7951  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7970  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_265\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:8035  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/YNPresalePair.sol\":1109:1325  function _transferTokenToUser(address user,uint256 money) private {... */\n    tag_155:\n        /* \"contracts/YNPresalePair.sol\":1247:1278  yerc20.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/YNPresalePair.sol\":1215:1219  this */\n      address\n        /* \"contracts/YNPresalePair.sol\":1247:1278  yerc20.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2471:2522   */\n      dup2\n      swap1\n      mstore\n        /* \"contracts/YNPresalePair.sol\":1215:1219  this */\n      swap1\n      dup2\n      swap1\n        /* \"contracts/YNPresalePair.sol\":1247:1263  yerc20.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2444:2462   */\n      0x24\n      add\n        /* \"contracts/YNPresalePair.sol\":1247:1278  yerc20.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_271\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_272\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_272:\n        /* \"contracts/YNPresalePair.sol\":1240:1245  money */\n      dup3\n        /* \"contracts/YNPresalePair.sol\":1240:1278  money<=yerc20.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/YNPresalePair.sol\":1232:1279  require(money<=yerc20.balanceOf(address(this))) */\n      tag_273\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_273:\n        /* \"contracts/YNPresalePair.sol\":1290:1317  yerc20.transfer(user,money) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9802:9834   */\n      dup5\n      dup2\n      and\n        /* \"contracts/YNPresalePair.sol\":1290:1317  yerc20.transfer(user,money) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9784:9835   */\n      mstore\n        /* \"#utility.yul\":9851:9869   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9844:9878   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/YNPresalePair.sol\":1290:1305  yerc20.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9757:9775   */\n      0x44\n      add\n        /* \"contracts/YNPresalePair.sol\":1290:1317  yerc20.transfer(user,money) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_282\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_195\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_282\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_285\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3807:3811  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3847:3856  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3858:3864  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3832  _transfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_291:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_297:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_26:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_299:\n        /* \"#utility.yul\":360:389   */\n      tag_300\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_291\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":451:1048   */\n    tag_32:\n        /* \"#utility.yul\":563:567   */\n      0x00\n        /* \"#utility.yul\":592:594   */\n      0x20\n        /* \"#utility.yul\":621:623   */\n      dup1\n        /* \"#utility.yul\":610:619   */\n      dup4\n        /* \"#utility.yul\":603:624   */\n      mstore\n        /* \"#utility.yul\":653:659   */\n      dup4\n        /* \"#utility.yul\":647:660   */\n      mload\n        /* \"#utility.yul\":696:702   */\n      dup1\n        /* \"#utility.yul\":691:693   */\n      dup3\n        /* \"#utility.yul\":680:689   */\n      dup6\n        /* \"#utility.yul\":676:694   */\n      add\n        /* \"#utility.yul\":669:703   */\n      mstore\n        /* \"#utility.yul\":721:722   */\n      0x00\n        /* \"#utility.yul\":731:871   */\n    tag_302:\n        /* \"#utility.yul\":745:751   */\n      dup2\n        /* \"#utility.yul\":742:743   */\n      dup2\n        /* \"#utility.yul\":739:752   */\n      lt\n        /* \"#utility.yul\":731:871   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":840:854   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":836:859   */\n      dup4\n      add\n        /* \"#utility.yul\":830:860   */\n      mload\n        /* \"#utility.yul\":806:823   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":825:827   */\n      0x40\n        /* \"#utility.yul\":802:828   */\n      add\n        /* \"#utility.yul\":795:861   */\n      mstore\n        /* \"#utility.yul\":760:770   */\n      dup3\n      add\n        /* \"#utility.yul\":731:871   */\n      jump(tag_302)\n    tag_304:\n        /* \"#utility.yul\":889:895   */\n      dup2\n        /* \"#utility.yul\":886:887   */\n      dup2\n        /* \"#utility.yul\":883:896   */\n      gt\n        /* \"#utility.yul\":880:971   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":959:960   */\n      0x00\n        /* \"#utility.yul\":954:956   */\n      0x40\n        /* \"#utility.yul\":945:951   */\n      dup4\n        /* \"#utility.yul\":934:943   */\n      dup8\n        /* \"#utility.yul\":930:952   */\n      add\n        /* \"#utility.yul\":926:957   */\n      add\n        /* \"#utility.yul\":919:961   */\n      mstore\n        /* \"#utility.yul\":880:971   */\n    tag_305:\n      pop\n        /* \"#utility.yul\":1032:1034   */\n      0x1f\n        /* \"#utility.yul\":1011:1026   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1007:1036   */\n      and\n        /* \"#utility.yul\":992:1037   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1039:1041   */\n      0x40\n        /* \"#utility.yul\":988:1042   */\n      add\n      swap4\n        /* \"#utility.yul\":451:1048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_47:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_309:\n        /* \"#utility.yul\":1612:1641   */\n      tag_310\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_291\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_311\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_291\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_67:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_314:\n        /* \"#utility.yul\":2100:2129   */\n      tag_282\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_291\n      jump\t// in\n        /* \"#utility.yul\":2140:2320   */\n    tag_76:\n        /* \"#utility.yul\":2199:2205   */\n      0x00\n        /* \"#utility.yul\":2252:2254   */\n      0x20\n        /* \"#utility.yul\":2240:2249   */\n      dup3\n        /* \"#utility.yul\":2231:2238   */\n      dup5\n        /* \"#utility.yul\":2227:2250   */\n      sub\n        /* \"#utility.yul\":2223:2255   */\n      slt\n        /* \"#utility.yul\":2220:2272   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2265:2266   */\n      dup1\n        /* \"#utility.yul\":2258:2270   */\n      revert\n        /* \"#utility.yul\":2220:2272   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":2291:2314   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2140:2320   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2533:2793   */\n    tag_102:\n        /* \"#utility.yul\":2601:2607   */\n      0x00\n        /* \"#utility.yul\":2609:2615   */\n      dup1\n        /* \"#utility.yul\":2662:2664   */\n      0x40\n        /* \"#utility.yul\":2650:2659   */\n      dup4\n        /* \"#utility.yul\":2641:2648   */\n      dup6\n        /* \"#utility.yul\":2637:2660   */\n      sub\n        /* \"#utility.yul\":2633:2665   */\n      slt\n        /* \"#utility.yul\":2630:2682   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2675:2676   */\n      dup1\n        /* \"#utility.yul\":2668:2680   */\n      revert\n        /* \"#utility.yul\":2630:2682   */\n    tag_320:\n        /* \"#utility.yul\":2701:2730   */\n      tag_321\n        /* \"#utility.yul\":2720:2729   */\n      dup4\n        /* \"#utility.yul\":2701:2730   */\n      tag_291\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2691:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2749:2787   */\n      tag_322\n        /* \"#utility.yul\":2783:2785   */\n      0x20\n        /* \"#utility.yul\":2772:2781   */\n      dup5\n        /* \"#utility.yul\":2768:2786   */\n      add\n        /* \"#utility.yul\":2749:2787   */\n      tag_291\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2739:2787   */\n      swap1\n      pop\n        /* \"#utility.yul\":2533:2793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:3154   */\n    tag_115:\n        /* \"#utility.yul\":3000:3002   */\n      0x20\n        /* \"#utility.yul\":2982:3003   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3019:3037   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3012:3042   */\n      mstore\n        /* \"#utility.yul\":3078:3112   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3073:3075   */\n      0x40\n        /* \"#utility.yul\":3058:3076   */\n      dup3\n      add\n        /* \"#utility.yul\":3051:3113   */\n      mstore\n        /* \"#utility.yul\":3145:3147   */\n      0x60\n        /* \"#utility.yul\":3130:3148   */\n      add\n      swap1\n        /* \"#utility.yul\":2798:3154   */\n      jump\t// out\n        /* \"#utility.yul\":3159:3539   */\n    tag_122:\n        /* \"#utility.yul\":3238:3239   */\n      0x01\n        /* \"#utility.yul\":3234:3246   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3281:3293   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3302:3363   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3356:3360   */\n      0x7f\n        /* \"#utility.yul\":3348:3354   */\n      dup3\n        /* \"#utility.yul\":3344:3361   */\n      and\n        /* \"#utility.yul\":3334:3361   */\n      swap2\n      pop\n        /* \"#utility.yul\":3302:3363   */\n    tag_325:\n        /* \"#utility.yul\":3409:3411   */\n      0x20\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3398:3412   */\n      lt\n        /* \"#utility.yul\":3378:3396   */\n      dup2\n        /* \"#utility.yul\":3375:3413   */\n      sub\n        /* \"#utility.yul\":3372:3533   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3455:3465   */\n      0x4e487b71\n        /* \"#utility.yul\":3450:3453   */\n      0xe0\n        /* \"#utility.yul\":3446:3466   */\n      shl\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3436:3467   */\n      mstore\n        /* \"#utility.yul\":3490:3494   */\n      0x22\n        /* \"#utility.yul\":3487:3488   */\n      0x04\n        /* \"#utility.yul\":3480:3495   */\n      mstore\n        /* \"#utility.yul\":3518:3522   */\n      0x24\n        /* \"#utility.yul\":3515:3516   */\n      0x00\n        /* \"#utility.yul\":3508:3523   */\n      revert\n        /* \"#utility.yul\":3372:3533   */\n    tag_326:\n      pop\n        /* \"#utility.yul\":3159:3539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3953:4080   */\n    tag_292:\n        /* \"#utility.yul\":4014:4024   */\n      0x4e487b71\n        /* \"#utility.yul\":4009:4012   */\n      0xe0\n        /* \"#utility.yul\":4005:4025   */\n      shl\n        /* \"#utility.yul\":4002:4003   */\n      0x00\n        /* \"#utility.yul\":3995:4026   */\n      mstore\n        /* \"#utility.yul\":4045:4049   */\n      0x11\n        /* \"#utility.yul\":4042:4043   */\n      0x04\n        /* \"#utility.yul\":4035:4050   */\n      mstore\n        /* \"#utility.yul\":4069:4073   */\n      0x24\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4059:4074   */\n      revert\n        /* \"#utility.yul\":4085:4213   */\n    tag_147:\n        /* \"#utility.yul\":4125:4128   */\n      0x00\n        /* \"#utility.yul\":4156:4157   */\n      dup3\n        /* \"#utility.yul\":4152:4158   */\n      not\n        /* \"#utility.yul\":4149:4150   */\n      dup3\n        /* \"#utility.yul\":4146:4159   */\n      gt\n        /* \"#utility.yul\":4143:4182   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4162:4180   */\n      tag_331\n      tag_292\n      jump\t// in\n    tag_331:\n      pop\n        /* \"#utility.yul\":4198:4207   */\n      add\n      swap1\n        /* \"#utility.yul\":4085:4213   */\n      jump\t// out\n        /* \"#utility.yul\":4624:5046   */\n    tag_293:\n        /* \"#utility.yul\":4713:4714   */\n      0x01\n        /* \"#utility.yul\":4756:4761   */\n      dup2\n        /* \"#utility.yul\":4713:4714   */\n      dup2\n        /* \"#utility.yul\":4770:5040   */\n    tag_334:\n        /* \"#utility.yul\":4791:4798   */\n      dup1\n        /* \"#utility.yul\":4781:4789   */\n      dup6\n        /* \"#utility.yul\":4778:4799   */\n      gt\n        /* \"#utility.yul\":4770:5040   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4850:4854   */\n      dup2\n        /* \"#utility.yul\":4846:4847   */\n      0x00\n        /* \"#utility.yul\":4842:4848   */\n      not\n        /* \"#utility.yul\":4838:4855   */\n      div\n        /* \"#utility.yul\":4832:4836   */\n      dup3\n        /* \"#utility.yul\":4829:4856   */\n      gt\n        /* \"#utility.yul\":4826:4879   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4859:4877   */\n      tag_338\n      tag_292\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4909:4916   */\n      dup1\n        /* \"#utility.yul\":4899:4907   */\n      dup6\n        /* \"#utility.yul\":4895:4917   */\n      and\n        /* \"#utility.yul\":4892:4947   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4929:4945   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":4892:4947   */\n    tag_339:\n        /* \"#utility.yul\":5008:5030   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":4968:4983   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":4770:5040   */\n      jump(tag_334)\n    tag_336:\n        /* \"#utility.yul\":4774:4777   */\n      pop\n        /* \"#utility.yul\":4624:5046   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5051:5857   */\n    tag_294:\n        /* \"#utility.yul\":5100:5105   */\n      0x00\n        /* \"#utility.yul\":5130:5138   */\n      dup3\n        /* \"#utility.yul\":5120:5200   */\n      tag_341\n      jumpi\n      pop\n        /* \"#utility.yul\":5171:5172   */\n      0x01\n        /* \"#utility.yul\":5185:5190   */\n      jump(tag_127)\n        /* \"#utility.yul\":5120:5200   */\n    tag_341:\n        /* \"#utility.yul\":5219:5223   */\n      dup2\n        /* \"#utility.yul\":5209:5285   */\n      tag_342\n      jumpi\n      pop\n        /* \"#utility.yul\":5256:5257   */\n      0x00\n        /* \"#utility.yul\":5270:5275   */\n      jump(tag_127)\n        /* \"#utility.yul\":5209:5285   */\n    tag_342:\n        /* \"#utility.yul\":5301:5305   */\n      dup2\n        /* \"#utility.yul\":5319:5320   */\n      0x01\n        /* \"#utility.yul\":5314:5373   */\n      dup2\n      eq\n      tag_344\n      jumpi\n        /* \"#utility.yul\":5387:5388   */\n      0x02\n        /* \"#utility.yul\":5382:5512   */\n      dup2\n      eq\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5294:5512   */\n      jump(tag_343)\n        /* \"#utility.yul\":5314:5373   */\n    tag_344:\n        /* \"#utility.yul\":5344:5345   */\n      0x01\n        /* \"#utility.yul\":5335:5345   */\n      swap2\n      pop\n        /* \"#utility.yul\":5358:5363   */\n      pop\n      jump(tag_127)\n        /* \"#utility.yul\":5382:5512   */\n    tag_345:\n        /* \"#utility.yul\":5419:5422   */\n      0xff\n        /* \"#utility.yul\":5409:5417   */\n      dup5\n        /* \"#utility.yul\":5406:5423   */\n      gt\n        /* \"#utility.yul\":5403:5446   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5426:5444   */\n      tag_347\n      tag_292\n      jump\t// in\n    tag_347:\n      pop\n      pop\n        /* \"#utility.yul\":5482:5483   */\n      0x01\n        /* \"#utility.yul\":5468:5484   */\n      dup3\n      shl\n        /* \"#utility.yul\":5497:5502   */\n      jump(tag_127)\n        /* \"#utility.yul\":5294:5512   */\n    tag_343:\n      pop\n        /* \"#utility.yul\":5596:5598   */\n      0x20\n        /* \"#utility.yul\":5586:5594   */\n      dup4\n        /* \"#utility.yul\":5583:5599   */\n      lt\n        /* \"#utility.yul\":5577:5580   */\n      0x0133\n        /* \"#utility.yul\":5571:5575   */\n      dup4\n        /* \"#utility.yul\":5568:5581   */\n      lt\n        /* \"#utility.yul\":5564:5600   */\n      and\n        /* \"#utility.yul\":5558:5560   */\n      0x4e\n        /* \"#utility.yul\":5548:5556   */\n      dup5\n        /* \"#utility.yul\":5545:5561   */\n      lt\n        /* \"#utility.yul\":5540:5542   */\n      0x0b\n        /* \"#utility.yul\":5534:5538   */\n      dup5\n        /* \"#utility.yul\":5531:5543   */\n      lt\n        /* \"#utility.yul\":5527:5562   */\n      and\n        /* \"#utility.yul\":5524:5601   */\n      or\n        /* \"#utility.yul\":5521:5680   */\n      iszero\n      tag_348\n      jumpi\n      pop\n        /* \"#utility.yul\":5633:5652   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5665:5670   */\n      jump(tag_127)\n        /* \"#utility.yul\":5521:5680   */\n    tag_348:\n        /* \"#utility.yul\":5712:5746   */\n      tag_349\n        /* \"#utility.yul\":5737:5745   */\n      dup4\n        /* \"#utility.yul\":5731:5735   */\n      dup4\n        /* \"#utility.yul\":5712:5746   */\n      tag_293\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5782:5788   */\n      dup1\n        /* \"#utility.yul\":5778:5779   */\n      0x00\n        /* \"#utility.yul\":5774:5780   */\n      not\n        /* \"#utility.yul\":5770:5789   */\n      div\n        /* \"#utility.yul\":5761:5768   */\n      dup3\n        /* \"#utility.yul\":5758:5790   */\n      gt\n        /* \"#utility.yul\":5755:5813   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5793:5811   */\n      tag_351\n      tag_292\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5831:5851   */\n      mul\n      swap4\n        /* \"#utility.yul\":5051:5857   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5862:6002   */\n    tag_193:\n        /* \"#utility.yul\":5920:5925   */\n      0x00\n        /* \"#utility.yul\":5949:5996   */\n      tag_282\n        /* \"#utility.yul\":5990:5994   */\n      0xff\n        /* \"#utility.yul\":5980:5988   */\n      dup5\n        /* \"#utility.yul\":5976:5995   */\n      and\n        /* \"#utility.yul\":5970:5974   */\n      dup4\n        /* \"#utility.yul\":5949:5996   */\n      tag_294\n      jump\t// in\n        /* \"#utility.yul\":6007:6175   */\n    tag_195:\n        /* \"#utility.yul\":6047:6054   */\n      0x00\n        /* \"#utility.yul\":6113:6114   */\n      dup2\n        /* \"#utility.yul\":6109:6110   */\n      0x00\n        /* \"#utility.yul\":6105:6111   */\n      not\n        /* \"#utility.yul\":6101:6115   */\n      div\n        /* \"#utility.yul\":6098:6099   */\n      dup4\n        /* \"#utility.yul\":6095:6116   */\n      gt\n        /* \"#utility.yul\":6090:6091   */\n      dup3\n        /* \"#utility.yul\":6083:6092   */\n      iszero\n        /* \"#utility.yul\":6076:6093   */\n      iszero\n        /* \"#utility.yul\":6072:6117   */\n      and\n        /* \"#utility.yul\":6069:6140   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6120:6138   */\n      tag_356\n      tag_292\n      jump\t// in\n    tag_356:\n      pop\n        /* \"#utility.yul\":6160:6169   */\n      mul\n      swap1\n        /* \"#utility.yul\":6007:6175   */\n      jump\t// out\n        /* \"#utility.yul\":6180:6364   */\n    tag_203:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6303:6305   */\n      0x20\n        /* \"#utility.yul\":6291:6300   */\n      dup3\n        /* \"#utility.yul\":6282:6289   */\n      dup5\n        /* \"#utility.yul\":6278:6301   */\n      sub\n        /* \"#utility.yul\":6274:6306   */\n      slt\n        /* \"#utility.yul\":6271:6323   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6319:6320   */\n      0x00\n        /* \"#utility.yul\":6316:6317   */\n      dup1\n        /* \"#utility.yul\":6309:6321   */\n      revert\n        /* \"#utility.yul\":6271:6323   */\n    tag_358:\n      pop\n        /* \"#utility.yul\":6342:6358   */\n      mload\n      swap2\n        /* \"#utility.yul\":6180:6364   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9889:10166   */\n    tag_279:\n        /* \"#utility.yul\":9956:9962   */\n      0x00\n        /* \"#utility.yul\":10009:10011   */\n      0x20\n        /* \"#utility.yul\":9997:10006   */\n      dup3\n        /* \"#utility.yul\":9988:9995   */\n      dup5\n        /* \"#utility.yul\":9984:10007   */\n      sub\n        /* \"#utility.yul\":9980:10012   */\n      slt\n        /* \"#utility.yul\":9977:10029   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":10025:10026   */\n      0x00\n        /* \"#utility.yul\":10022:10023   */\n      dup1\n        /* \"#utility.yul\":10015:10027   */\n      revert\n        /* \"#utility.yul\":9977:10029   */\n    tag_369:\n        /* \"#utility.yul\":10057:10066   */\n      dup2\n        /* \"#utility.yul\":10051:10067   */\n      mload\n        /* \"#utility.yul\":10110:10115   */\n      dup1\n        /* \"#utility.yul\":10103:10116   */\n      iszero\n        /* \"#utility.yul\":10096:10117   */\n      iszero\n        /* \"#utility.yul\":10089:10094   */\n      dup2\n        /* \"#utility.yul\":10086:10118   */\n      eq\n        /* \"#utility.yul\":10076:10136   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":10132:10133   */\n      0x00\n        /* \"#utility.yul\":10129:10130   */\n      dup1\n        /* \"#utility.yul\":10122:10134   */\n      revert\n        /* \"#utility.yul\":10171:10388   */\n    tag_285:\n        /* \"#utility.yul\":10211:10212   */\n      0x00\n        /* \"#utility.yul\":10237:10238   */\n      dup3\n        /* \"#utility.yul\":10227:10359   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":10281:10291   */\n      0x4e487b71\n        /* \"#utility.yul\":10276:10279   */\n      0xe0\n        /* \"#utility.yul\":10272:10292   */\n      shl\n        /* \"#utility.yul\":10269:10270   */\n      0x00\n        /* \"#utility.yul\":10262:10293   */\n      mstore\n        /* \"#utility.yul\":10316:10320   */\n      0x12\n        /* \"#utility.yul\":10313:10314   */\n      0x04\n        /* \"#utility.yul\":10306:10321   */\n      mstore\n        /* \"#utility.yul\":10344:10348   */\n      0x24\n        /* \"#utility.yul\":10341:10342   */\n      0x00\n        /* \"#utility.yul\":10334:10349   */\n      revert\n        /* \"#utility.yul\":10227:10359   */\n    tag_372:\n      pop\n        /* \"#utility.yul\":10373:10382   */\n      div\n      swap1\n        /* \"#utility.yul\":10171:10388   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6dc4075610ac417feab9892b7ce92037624a6a06a49936c28cd0dcba0d6706e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1279": {
									"entryPoint": null,
									"id": 1279,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_510": {
									"entryPoint": 536,
									"id": 510,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_765": {
									"entryPoint": 450,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 454,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3800:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "163:387:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "210:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "219:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "222:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "212:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "212:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "212:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "184:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "193:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "180:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "180:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "205:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "176:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:33:8"
															},
															"nodeType": "YulIf",
															"src": "173:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "254:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "248:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "239:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "327:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "336:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "339:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "329:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "329:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "329:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "286:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "297:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "312:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "317:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "308:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "308:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "321:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "304:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "304:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "293:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "293:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "283:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "276:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:50:8"
															},
															"nodeType": "YulIf",
															"src": "273:70:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "352:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "362:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "352:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "396:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "407:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "386:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "420:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "440:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "451:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "436:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "436:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "430:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:25:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "464:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "474:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:25:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "464:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "508:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "528:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "539:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "524:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "524:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "518:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:26:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "508:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "97:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "108:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "120:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "128:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "136:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "144:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "152:6:8",
														"type": ""
													}
												],
												"src": "14:536:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "634:194:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "680:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "692:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "682:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "682:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "664:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "676:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "647:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:32:8"
															},
															"nodeType": "YulIf",
															"src": "644:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "705:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "724:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "718:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "709:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "782:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "791:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "794:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "784:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "784:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "756:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "767:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "774:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "753:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "753:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "746:35:8"
															},
															"nodeType": "YulIf",
															"src": "743:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "807:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "817:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "600:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "611:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "623:6:8",
														"type": ""
													}
												],
												"src": "555:273:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "882:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "889:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "885:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "885:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "875:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "925:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "915:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "833:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1029:358:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1039:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1054:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1043:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1064:16:8",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "1073:7:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1064:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1089:13:8",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "1097:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "1089:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1153:228:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1198:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "1200:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1200:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1200:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1173:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1187:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1183:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1183:6:8"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "1191:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "1179:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1179:17:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1170:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1170:27:8"
																		},
																		"nodeType": "YulIf",
																		"src": "1167:53:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1259:29:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1261:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "1274:5:8"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1281:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1270:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1270:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1261:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1240:8:8"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "1250:7:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1236:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1236:22:8"
																		},
																		"nodeType": "YulIf",
																		"src": "1233:55:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1301:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1313:4:8"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1319:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1309:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1309:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1301:4:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1337:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "1353:7:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1362:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "1349:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1349:22:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1337:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1122:8:8"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1119:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:21:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1141:3:8",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1115:3:8",
																"statements": []
															},
															"src": "1111:270:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "993:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1000:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1013:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1020:4:8",
														"type": ""
													}
												],
												"src": "965:422:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1451:747:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1489:52:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1503:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1512:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1503:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1526:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1471:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:16:8"
															},
															"nodeType": "YulIf",
															"src": "1461:80:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1574:52:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1588:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1597:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1588:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1611:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1560:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:12:8"
															},
															"nodeType": "YulIf",
															"src": "1550:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1662:52:8",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1676:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1685:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1676:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1699:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1655:59:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1730:123:8",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1765:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1767:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1767:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1767:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1750:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1760:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1747:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1747:17:8"
																				},
																				"nodeType": "YulIf",
																				"src": "1744:43:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1800:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1813:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1823:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1809:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1809:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1800:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1838:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1723:130:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1728:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1642:4:8"
															},
															"nodeType": "YulSwitch",
															"src": "1635:218:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:70:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1965:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1978:4:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1984:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1974:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1974:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1965:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2006:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1875:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1881:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1872:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1872:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1889:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1899:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1868:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1868:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1912:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1918:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1909:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1909:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1927:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1937:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1924:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1924:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1865:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:77:8"
															},
															"nodeType": "YulIf",
															"src": "1862:159:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2072:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2078:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2053:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:34:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2034:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "2043:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2132:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2134:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2134:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2102:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2119:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2115:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2115:6:8"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "2123:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2111:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2099:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:32:8"
															},
															"nodeType": "YulIf",
															"src": "2096:58:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2163:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:7:8"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "2185:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2172:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2163:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1422:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1428:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1441:5:8",
														"type": ""
													}
												],
												"src": "1392:806:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2271:72:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2281:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2311:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "2321:8:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2331:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "2290:20:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2281:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2242:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2248:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2261:5:8",
														"type": ""
													}
												],
												"src": "2203:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2400:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2459:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2461:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2461:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2461:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2431:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2424:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2424:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2417:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2417:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2439:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2450:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2446:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2446:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2454:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2442:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2442:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2436:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2436:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2413:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:45:8"
															},
															"nodeType": "YulIf",
															"src": "2410:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2490:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2505:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2508:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2501:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2490:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2379:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2382:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2388:7:8",
														"type": ""
													}
												],
												"src": "2348:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2619:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2626:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2631:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2622:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2622:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2612:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2612:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2612:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2666:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2656:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2656:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2656:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2691:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2694:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2684:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2684:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2684:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2587:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:9:8"
															},
															"nodeType": "YulIf",
															"src": "2577:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2718:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2727:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2730:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2723:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2718:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2552:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2555:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2561:1:8",
														"type": ""
													}
												],
												"src": "2521:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2917:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2934:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2945:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2927:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2927:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2968:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2979:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2964:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2964:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2957:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2957:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3018:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3003:18:8"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3023:33:8",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2996:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2996:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3066:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3066:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2894:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2908:4:8",
														"type": ""
													}
												],
												"src": "2743:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3151:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3178:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3180:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3180:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3167:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3174:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3170:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3170:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3164:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3164:13:8"
															},
															"nodeType": "YulIf",
															"src": "3161:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3209:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3220:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3223:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3209:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3134:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3137:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3143:3:8",
														"type": ""
													}
												],
												"src": "3103:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3337:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3347:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3359:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3370:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3355:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3347:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3389:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3400:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3382:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3306:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3317:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3328:4:8",
														"type": ""
													}
												],
												"src": "3236:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3483:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3497:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3500:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3493:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3493:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3514:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3544:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3550:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3518:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3591:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3593:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3607:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3615:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3603:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3603:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3593:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3571:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3564:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:26:8"
															},
															"nodeType": "YulIf",
															"src": "3561:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3681:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3702:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3709:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3714:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3705:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3705:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3695:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3695:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3695:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3746:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3749:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3739:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3739:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3739:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3774:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3777:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3767:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3767:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3767:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3637:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3660:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3668:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3657:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3634:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3634:38:8"
															},
															"nodeType": "YulIf",
															"src": "3631:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3453:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3462:6:8",
														"type": ""
													}
												],
												"src": "3418:380:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600060068190556007819055670de0b6b3a76400006008556009819055600a55600b805460ff191660121790553480156200003e57600080fd5b50604051620017f6380380620017f68339810160408190526200006191620003a6565b60408051808201825260118152702cbab5b490283932b9b0b632902830b4b960791b602080830191825283518085019094526006845265594e2d50507360d01b908401528151919291620000b89160039162000300565b508051620000ce90600490602084019062000300565b505050620000eb620000e5620001c260201b60201c565b620001c6565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200012a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001509190620003fd565b600b805460ff191660ff929092169182179055620001899033906200017790600a6200053e565b6200018390876200054f565b62000218565b8260085462000199919062000571565b600655600854620001ac90849062000571565b600755600991909155600a5550620005eb915050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002735760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000287919062000594565b90915550506001600160a01b03821660009081526020819052604081208054839290620002b690849062000594565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546200030e90620005af565b90600052602060002090601f0160209004810192826200033257600085556200037d565b82601f106200034d57805160ff19168380011785556200037d565b828001600101855582156200037d579182015b828111156200037d57825182559160200191906001019062000360565b506200038b9291506200038f565b5090565b5b808211156200038b576000815560010162000390565b600080600080600060a08688031215620003bf57600080fd5b85516001600160a01b0381168114620003d757600080fd5b602087015160408801516060890151608090990151929a91995097965090945092505050565b6000602082840312156200041057600080fd5b815160ff811681146200042257600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200048057816000190482111562000464576200046462000429565b808516156200047257918102915b93841c939080029062000444565b509250929050565b600082620004995750600162000538565b81620004a85750600062000538565b8160018114620004c15760028114620004cc57620004ec565b600191505062000538565b60ff841115620004e057620004e062000429565b50506001821b62000538565b5060208310610133831016604e8410600b841016171562000511575081810a62000538565b6200051d83836200043f565b806000190482111562000534576200053462000429565b0290505b92915050565b60006200042260ff84168362000488565b60008160001904831182151516156200056c576200056c62000429565b500290565b6000826200058f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620005aa57620005aa62000429565b500190565b600181811c90821680620005c457607f821691505b602082108103620005e557634e487b7160e01b600052602260045260246000fd5b50919050565b6111fb80620005fb6000396000f3fe6080604052600436106101095760003560e01c8063715018a611610095578063a457c2d711610064578063a457c2d7146102d4578063a6f2ae3a146102f4578063a9059cbb146102fc578063dd62ed3e1461031c578063f2fde38b1461036257600080fd5b8063715018a614610262578063715994e3146102775780638da5cb5b1461029757806395d89b41146102bf57600080fd5b806323b872dd116100dc57806323b872dd146101aa578063313ce567146101ca57806339509351146101ec5780634664ffea1461020c57806370a082311461022c57600080fd5b80630510a5b31461010e57806306fdde0314610130578063095ea7b31461015b57806318160ddd1461018b575b600080fd5b34801561011a57600080fd5b5061012e610129366004610e97565b610382565b005b34801561013c57600080fd5b506101456103fd565b6040516101529190610ec1565b60405180910390f35b34801561016757600080fd5b5061017b610176366004610e97565b61048f565b6040519015158152602001610152565b34801561019757600080fd5b506002545b604051908152602001610152565b3480156101b657600080fd5b5061017b6101c5366004610f16565b6104a6565b3480156101d657600080fd5b50600b5460405160ff9091168152602001610152565b3480156101f857600080fd5b5061017b610207366004610e97565b610550565b34801561021857600080fd5b5061012e610227366004610e97565b61058c565b34801561023857600080fd5b5061019c610247366004610f52565b6001600160a01b031660009081526020819052604090205490565b34801561026e57600080fd5b5061012e6105c4565b34801561028357600080fd5b5061012e610292366004610f6d565b6105fa565b3480156102a357600080fd5b506005546040516001600160a01b039091168152602001610152565b3480156102cb57600080fd5b5061014561066b565b3480156102e057600080fd5b5061017b6102ef366004610e97565b61067a565b61012e610713565b34801561030857600080fd5b5061017b610317366004610e97565b610864565b34801561032857600080fd5b5061019c610337366004610f86565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561036e57600080fd5b5061012e61037d366004610f52565b61098e565b6005546001600160a01b031633146103b55760405162461bcd60e51b81526004016103ac90610fb9565b60405180910390fd5b478111156103c257600080fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156103f8573d6000803e3d6000fd5b505050565b60606003805461040c90610fee565b80601f016020809104026020016040519081016040528092919081815260200182805461043890610fee565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b600061049c338484610a29565b5060015b92915050565b60006104b3848484610b4d565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016103ac565b6105458533858403610a29565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161049c91859061058790869061103e565b610a29565b6005546001600160a01b031633146105b65760405162461bcd60e51b81526004016103ac90610fb9565b6105c08282610d1c565b5050565b6005546001600160a01b031633146105ee5760405162461bcd60e51b81526004016103ac90610fb9565b6105f86000610dfd565b565b6005546001600160a01b031633146106245760405162461bcd60e51b81526004016103ac90610fb9565b4781111561063157600080fd5b6005546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156105c0573d6000803e3d6000fd5b60606004805461040c90610fee565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106fc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ac565b6107093385858403610a29565b5060019392505050565b600654600b543091349160009161074e91610748906107369060ff16600a61113a565b610741906001611149565b8590610e4f565b90610e62565b90506009548111610804576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c19190611168565b81116107d1576103f83382610d1c565b604051339083156108fc029084906000818181858888f193505050501580156107fe573d6000803e3d6000fd5b50505050565b6009548211156103f85760405162461bcd60e51b815260206004820152602560248201527f594e50726573616c653a20414d4f554e542053414c4520414d4f554e5420455860448201526421a2a2a21760d91b60648201526084016103ac565b6000806108718484610e6e565b905082306001600160a01b0386160361098657600b546000906108b59061089c9060ff16600a61113a565b6108a7906001611149565b600754610748908590610e4f565b9050600a548211610927574781116108fa57604051339082156108fc029083906000818181858888f193505050501580156108f4573d6000803e3d6000fd5b50610984565b604051339083156108fc029084906000818181858888f193505050501580156108f4573d6000803e3d6000fd5b600a548211156109845760405162461bcd60e51b815260206004820152602260248201527f594e50726573616c653a204d41582053414c4520414d4f554e54204558434545604482015261221760f11b60648201526084016103ac565b505b509392505050565b6005546001600160a01b031633146109b85760405162461bcd60e51b81526004016103ac90610fb9565b6001600160a01b038116610a1d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ac565b610a2681610dfd565b50565b6001600160a01b038316610a8b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ac565b6001600160a01b038216610aec5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ac565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bb15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ac565b6001600160a01b038216610c135760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ac565b6001600160a01b03831660009081526020819052604090205481811015610c8b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ac565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610cc290849061103e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d0e91815260200190565b60405180910390a350505050565b6040516370a0823160e01b815230600482018190529081906370a0823190602401602060405180830381865afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190611168565b821115610d8a57600080fd5b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905282169063a9059cbb906044016020604051808303816000875af1158015610dd9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611181565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610e5b8284611149565b9392505050565b6000610e5b82846111a3565b600061049c338484610b4d565b80356001600160a01b0381168114610e9257600080fd5b919050565b60008060408385031215610eaa57600080fd5b610eb383610e7b565b946020939093013593505050565b600060208083528351808285015260005b81811015610eee57858101830151858201604001528201610ed2565b81811115610f00576000604083870101525b50601f01601f1916929092016040019392505050565b600080600060608486031215610f2b57600080fd5b610f3484610e7b565b9250610f4260208501610e7b565b9150604084013590509250925092565b600060208284031215610f6457600080fd5b610e5b82610e7b565b600060208284031215610f7f57600080fd5b5035919050565b60008060408385031215610f9957600080fd5b610fa283610e7b565b9150610fb060208401610e7b565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061100257607f821691505b60208210810361102257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561105157611051611028565b500190565b600181815b8085111561109157816000190482111561107757611077611028565b8085161561108457918102915b93841c939080029061105b565b509250929050565b6000826110a8575060016104a0565b816110b5575060006104a0565b81600181146110cb57600281146110d5576110f1565b60019150506104a0565b60ff8411156110e6576110e6611028565b50506001821b6104a0565b5060208310610133831016604e8410600b8410161715611114575081810a6104a0565b61111e8383611056565b806000190482111561113257611132611028565b029392505050565b6000610e5b60ff841683611099565b600081600019048311821515161561116357611163611028565b500290565b60006020828403121561117a57600080fd5b5051919050565b60006020828403121561119357600080fd5b81518015158114610e5b57600080fd5b6000826111c057634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d6dc4075610ac417feab9892b7ce92037624a6a06a49936c28cd0dcba0d6706e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0xA SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17F6 CODESIZE SUB DUP1 PUSH3 0x17F6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x61 SWAP2 PUSH3 0x3A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x2CBAB5B490283932B9B0B632902830B4B9 PUSH1 0x79 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH6 0x594E2D505073 PUSH1 0xD0 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0xB8 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x300 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xCE SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x300 JUMP JUMPDEST POP POP POP PUSH3 0xEB PUSH3 0xE5 PUSH3 0x1C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1C6 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x12A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x150 SWAP2 SWAP1 PUSH3 0x3FD JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH3 0x189 SWAP1 CALLER SWAP1 PUSH3 0x177 SWAP1 PUSH1 0xA PUSH3 0x53E JUMP JUMPDEST PUSH3 0x183 SWAP1 DUP8 PUSH3 0x54F JUMP JUMPDEST PUSH3 0x218 JUMP JUMPDEST DUP3 PUSH1 0x8 SLOAD PUSH3 0x199 SWAP2 SWAP1 PUSH3 0x571 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x8 SLOAD PUSH3 0x1AC SWAP1 DUP5 SWAP1 PUSH3 0x571 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE POP PUSH3 0x5EB SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x287 SWAP2 SWAP1 PUSH3 0x594 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x2B6 SWAP1 DUP5 SWAP1 PUSH3 0x594 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x30E SWAP1 PUSH3 0x5AF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x332 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x37D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x34D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x37D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x37D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x37D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x360 JUMP JUMPDEST POP PUSH3 0x38B SWAP3 SWAP2 POP PUSH3 0x38F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x38B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x390 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x80 SWAP1 SWAP10 ADD MLOAD SWAP3 SWAP11 SWAP2 SWAP10 POP SWAP8 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x480 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x464 JUMPI PUSH3 0x464 PUSH3 0x429 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x472 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x444 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x499 JUMPI POP PUSH1 0x1 PUSH3 0x538 JUMP JUMPDEST DUP2 PUSH3 0x4A8 JUMPI POP PUSH1 0x0 PUSH3 0x538 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4C1 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4CC JUMPI PUSH3 0x4EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x538 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x4E0 JUMPI PUSH3 0x4E0 PUSH3 0x429 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x538 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x511 JUMPI POP DUP2 DUP2 EXP PUSH3 0x538 JUMP JUMPDEST PUSH3 0x51D DUP4 DUP4 PUSH3 0x43F JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x534 JUMPI PUSH3 0x534 PUSH3 0x429 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x422 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x488 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x56C JUMPI PUSH3 0x56C PUSH3 0x429 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x58F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x5AA JUMPI PUSH3 0x5AA PUSH3 0x429 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x5C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FB DUP1 PUSH3 0x5FB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x715994E3 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x4664FFEA EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x510A5B3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x5C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x66B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x713 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x40C SWAP1 PUSH2 0xFEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0xFEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x485 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x485 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x468 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C CALLER DUP5 DUP5 PUSH2 0xA29 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP5 DUP5 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x545 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x49C SWAP2 DUP6 SWAP1 PUSH2 0x587 SWAP1 DUP7 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x5C0 DUP3 DUP3 PUSH2 0xD1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x5F8 PUSH1 0x0 PUSH2 0xDFD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x40C SWAP1 PUSH2 0xFEE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x709 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD ADDRESS SWAP2 CALLVALUE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x74E SWAP2 PUSH2 0x748 SWAP1 PUSH2 0x736 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x113A JUMP JUMPDEST PUSH2 0x741 SWAP1 PUSH1 0x1 PUSH2 0x1149 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST DUP2 GT PUSH2 0x7D1 JUMPI PUSH2 0x3F8 CALLER DUP3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x594E50726573616C653A20414D4F554E542053414C4520414D4F554E54204558 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x21A2A2A217 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x871 DUP5 DUP5 PUSH2 0xE6E JUMP JUMPDEST SWAP1 POP DUP3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SUB PUSH2 0x986 JUMPI PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x8B5 SWAP1 PUSH2 0x89C SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x113A JUMP JUMPDEST PUSH2 0x8A7 SWAP1 PUSH1 0x1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x748 SWAP1 DUP6 SWAP1 PUSH2 0xE4F JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP3 GT PUSH2 0x927 JUMPI SELFBALANCE DUP2 GT PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x984 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP3 GT ISZERO PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x594E50726573616C653A204D41582053414C4520414D4F554E54204558434545 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x2217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0xA26 DUP2 PUSH2 0xDFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xCC2 SWAP1 DUP5 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD0E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP3 DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP3 DUP5 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C CALLER DUP5 DUP5 PUSH2 0xB4D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB3 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xED2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF34 DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP3 POP PUSH2 0xF42 PUSH1 0x20 DUP6 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5B DUP3 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA2 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0xFB0 PUSH1 0x20 DUP5 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1002 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1022 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0x1028 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1091 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1077 PUSH2 0x1028 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1084 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x105B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10A8 JUMPI POP PUSH1 0x1 PUSH2 0x4A0 JUMP JUMPDEST DUP2 PUSH2 0x10B5 JUMPI POP PUSH1 0x0 PUSH2 0x4A0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x10CB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10D5 JUMPI PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x10E6 PUSH2 0x1028 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4A0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1114 JUMPI POP DUP2 DUP2 EXP PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x111E DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1132 PUSH2 0x1028 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1163 JUMPI PUSH2 0x1163 PUSH2 0x1028 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDC BLOCKHASH PUSH22 0x610AC417FEAB9892B7CE92037624A6A06A49936C28CD 0xD 0xCB LOG0 0xD6 PUSH17 0x6E64736F6C634300080D00330000000000 ",
							"sourceMap": "256:2807:7:-:0;;;357:1;341:17;;;;365:18;;;;402:12;390:24;;423:17;;;;447:18;;472:17;;;-1:-1:-1;;472:17:7;487:2;472:17;;;498:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:113:1;;;;;;;;;;;-1:-1:-1;;;1963:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1963:113:1;;;;2029:13;;1963:113;;;2029:13;;:5;;:13;:::i;:::-;-1:-1:-1;2052:17:1;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;653:5:7::1;-1:-1:-1::0;;;;;646:22:7::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;637:8;:33:::0;;-1:-1:-1;;637:33:7::1;;::::0;;;::::1;::::0;;::::1;::::0;;681:45:::1;::::0;687:10:::1;::::0;711:14:::1;::::0;:2:::1;:14;:::i;:::-;699:26;::::0;:9;:26:::1;:::i;:::-;681:5;:45::i;:::-;751:12;745:3;;:18;;;;:::i;:::-;737:7;:26:::0;783:3:::1;::::0;:18:::1;::::0;789:12;;783:18:::1;:::i;:::-;774:8;:27:::0;812:7:::1;:14:::0;;;;837:8:::1;:16:::0;-1:-1:-1;256:2807:7;;-1:-1:-1;;256:2807:7;640:96:4;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8311:389:1:-;-1:-1:-1;;;;;8394:21:1;;8386:65;;;;-1:-1:-1;;;8386:65:1;;2945:2:8;8386:65:1;;;2927:21:8;2984:2;2964:18;;;2957:30;3023:33;3003:18;;;2996:61;3074:18;;8386:65:1;;;;;;;;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:1;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:1;;3382:25:8;;;-1:-1:-1;;;;;8597:37:1;;;8614:1;;8597:37;;3370:2:8;3355:18;8597:37:1;;;;;;;8311:389;;:::o;256:2807:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;256:2807:7;;;-1:-1:-1;256:2807:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:536:8;120:6;128;136;144;152;205:3;193:9;184:7;180:23;176:33;173:53;;;222:1;219;212:12;173:53;248:16;;-1:-1:-1;;;;;293:31:8;;283:42;;273:70;;339:1;336;329:12;273:70;407:2;392:18;;386:25;451:2;436:18;;430:25;495:2;480:18;;474:25;539:3;524:19;;;518:26;362:5;;386:25;;-1:-1:-1;430:25:8;474;-1:-1:-1;518:26:8;;-1:-1:-1;14:536:8;-1:-1:-1;;;14:536:8:o;555:273::-;623:6;676:2;664:9;655:7;651:23;647:32;644:52;;;692:1;689;682:12;644:52;724:9;718:16;774:4;767:5;763:16;756:5;753:27;743:55;;794:1;791;784:12;743:55;817:5;555:273;-1:-1:-1;;;555:273:8:o;833:127::-;894:10;889:3;885:20;882:1;875:31;925:4;922:1;915:15;949:4;946:1;939:15;965:422;1054:1;1097:5;1054:1;1111:270;1132:7;1122:8;1119:21;1111:270;;;1191:4;1187:1;1183:6;1179:17;1173:4;1170:27;1167:53;;;1200:18;;:::i;:::-;1250:7;1240:8;1236:22;1233:55;;;1270:16;;;;1233:55;1349:22;;;;1309:15;;;;1111:270;;;1115:3;965:422;;;;;:::o;1392:806::-;1441:5;1471:8;1461:80;;-1:-1:-1;1512:1:8;1526:5;;1461:80;1560:4;1550:76;;-1:-1:-1;1597:1:8;1611:5;;1550:76;1642:4;1660:1;1655:59;;;;1728:1;1723:130;;;;1635:218;;1655:59;1685:1;1676:10;;1699:5;;;1723:130;1760:3;1750:8;1747:17;1744:43;;;1767:18;;:::i;:::-;-1:-1:-1;;1823:1:8;1809:16;;1838:5;;1635:218;;1937:2;1927:8;1924:16;1918:3;1912:4;1909:13;1905:36;1899:2;1889:8;1886:16;1881:2;1875:4;1872:12;1868:35;1865:77;1862:159;;;-1:-1:-1;1974:19:8;;;2006:5;;1862:159;2053:34;2078:8;2072:4;2053:34;:::i;:::-;2123:6;2119:1;2115:6;2111:19;2102:7;2099:32;2096:58;;;2134:18;;:::i;:::-;2172:20;;-1:-1:-1;1392:806:8;;;;;:::o;2203:140::-;2261:5;2290:47;2331:4;2321:8;2317:19;2311:4;2290:47;:::i;2348:168::-;2388:7;2454:1;2450;2446:6;2442:14;2439:1;2436:21;2431:1;2424:9;2417:17;2413:45;2410:71;;;2461:18;;:::i;:::-;-1:-1:-1;2501:9:8;;2348:168::o;2521:217::-;2561:1;2587;2577:132;;2631:10;2626:3;2622:20;2619:1;2612:31;2666:4;2663:1;2656:15;2694:4;2691:1;2684:15;2577:132;-1:-1:-1;2723:9:8;;2521:217::o;3103:128::-;3143:3;3174:1;3170:6;3167:1;3164:13;3161:39;;;3180:18;;:::i;:::-;-1:-1:-1;3216:9:8;;3103:128::o;3418:380::-;3497:1;3493:12;;;;3540;;;3561:61;;3615:4;3607:6;3603:17;3593:27;;3561:61;3668:2;3660:6;3657:14;3637:18;3634:38;3631:161;;3714:10;3709:3;3705:20;3702:1;3695:31;3749:4;3746:1;3739:15;3777:4;3774:1;3767:15;3631:161;;3418:380;;;:::o;:::-;256:2807:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_649": {
									"entryPoint": null,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 2601,
									"id": 627,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_638": {
									"entryPoint": null,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_765": {
									"entryPoint": null,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 3581,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferTokenToUser_1340": {
									"entryPoint": 3356,
									"id": 1340,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_454": {
									"entryPoint": 2893,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_242": {
									"entryPoint": null,
									"id": 242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_263": {
									"entryPoint": 1167,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buy_1413": {
									"entryPoint": 1811,
									"id": 1413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1288": {
									"entryPoint": null,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_377": {
									"entryPoint": 1658,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_996": {
									"entryPoint": 3682,
									"id": 996,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_338": {
									"entryPoint": 1360,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_981": {
									"entryPoint": 3663,
									"id": 981,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_159": {
									"entryPoint": 1021,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1476,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_169": {
									"entryPoint": 1643,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferBalanceToUser_1556": {
									"entryPoint": 898,
									"id": 1556,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferBalanceToYuki_1528": {
									"entryPoint": 1530,
									"id": 1528,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferFrom_311": {
									"entryPoint": 1190,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 2446,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokenToUser_1303": {
									"entryPoint": 1420,
									"id": 1303,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_1501": {
									"entryPoint": 2148,
									"id": 1501,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_224": {
									"entryPoint": 3694,
									"id": 224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cc364fbb957022b589cc43a728c90253961f2903402929b90452f721ba4a228__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3c8d199788da4990dbbb010fe130b4cb5edb87bf34f6bb2211ae01d42d4f2d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10390:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nodeType": "YulIf",
															"src": "111:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:8"
															},
															"nodeType": "YulIf",
															"src": "289:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:8",
														"type": ""
													}
												],
												"src": "192:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "572:476:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "592:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "586:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "610:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "621:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "633:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "653:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "647:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "637:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "680:9:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "691:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "676:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "696:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "669:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "712:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "721:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "716:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "781:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "810:9:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "821:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "806:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "806:17:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "825:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "802:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "802:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "844:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "852:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "840:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "840:14:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "856:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "836:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "836:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "830:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "830:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "795:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "795:66:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "795:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "742:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "745:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "739:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "739:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "753:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "755:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "764:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "767:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "760:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "760:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "755:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "735:3:8",
																"statements": []
															},
															"src": "731:140:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "905:66:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "934:9:8"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "945:6:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "930:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "930:22:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "954:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "926:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "926:31:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "959:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "919:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "919:42:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "919:42:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "886:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "889:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "883:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:13:8"
															},
															"nodeType": "YulIf",
															"src": "880:91:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "980:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "996:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1015:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1023:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1011:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1011:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1032:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1028:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1028:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1007:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1007:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "992:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1039:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "988:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "980:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "541:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "552:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "563:4:8",
														"type": ""
													}
												],
												"src": "451:597:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:8",
														"type": ""
													}
												],
												"src": "1053:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:8",
														"type": ""
													}
												],
												"src": "1245:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:8"
															},
															"nodeType": "YulIf",
															"src": "1541:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:8",
														"type": ""
													}
												],
												"src": "1427:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:8",
														"type": ""
													}
												],
												"src": "1760:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:8"
															},
															"nodeType": "YulIf",
															"src": "2029:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:8",
														"type": ""
													}
												],
												"src": "1949:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2210:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2256:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2265:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2258:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2258:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2231:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2240:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2252:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2223:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:32:8"
															},
															"nodeType": "YulIf",
															"src": "2220:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2281:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2304:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2291:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2176:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2187:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2199:6:8",
														"type": ""
													}
												],
												"src": "2140:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2426:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2436:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2478:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2509:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2514:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2505:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2505:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2518:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2501:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2489:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2489:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2395:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2406:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2417:4:8",
														"type": ""
													}
												],
												"src": "2325:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2620:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2666:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2675:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2668:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2641:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2650:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:32:8"
															},
															"nodeType": "YulIf",
															"src": "2630:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2691:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2720:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2701:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2739:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2749:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2589:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2601:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2609:6:8",
														"type": ""
													}
												],
												"src": "2533:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2989:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3000:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3023:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3034:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3039:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3012:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3062:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3073:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3058:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3078:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3051:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3122:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3134:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3122:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2949:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2963:4:8",
														"type": ""
													}
												],
												"src": "2798:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3214:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3224:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3238:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3241:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3234:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3255:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3285:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3259:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3332:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3334:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3348:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3356:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3334:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3312:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3305:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3305:26:8"
															},
															"nodeType": "YulIf",
															"src": "3302:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3422:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3443:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3450:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3455:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3446:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3446:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3436:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3436:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3436:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3487:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3490:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3480:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3480:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3480:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3515:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3518:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3508:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3508:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3508:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3378:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3401:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3398:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3398:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3375:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3375:38:8"
															},
															"nodeType": "YulIf",
															"src": "3372:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3194:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3203:6:8",
														"type": ""
													}
												],
												"src": "3159:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:230:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3735:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3746:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3728:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3728:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3780:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3765:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3765:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3758:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3819:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3804:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3824:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3797:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3797:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3890:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:18:8"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3895:10:8",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3868:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3868:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3915:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3927:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3923:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3915:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3695:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3709:4:8",
														"type": ""
													}
												],
												"src": "3544:404:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3985:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4002:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4009:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4014:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3995:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4042:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4035:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4069:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4059:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3953:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4133:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4160:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4162:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4162:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4162:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4149:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4156:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4146:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4146:13:8"
															},
															"nodeType": "YulIf",
															"src": "4143:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4191:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4202:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4205:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4191:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4116:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4119:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4125:3:8",
														"type": ""
													}
												],
												"src": "4085:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4392:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4409:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4420:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4402:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4443:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4454:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4439:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4459:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4432:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4493:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4478:18:8"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4498:34:8",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4471:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4553:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4564:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:18:8"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4569:7:8",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4542:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4542:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4586:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4598:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4594:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4586:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4369:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4383:4:8",
														"type": ""
													}
												],
												"src": "4218:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4688:358:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4698:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4713:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4702:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4723:16:8",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "4732:7:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4723:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4748:13:8",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "4756:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "4748:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:228:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4857:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "4859:16:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4859:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4859:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4832:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4846:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4842:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4842:6:8"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "4850:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "4838:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4838:17:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4829:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4829:27:8"
																		},
																		"nodeType": "YulIf",
																		"src": "4826:53:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4918:29:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4920:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "4933:5:8"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "4940:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "4929:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4929:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "4920:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4899:8:8"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "4909:7:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4895:22:8"
																		},
																		"nodeType": "YulIf",
																		"src": "4892:55:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4960:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4972:4:8"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4978:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "4968:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4968:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "4960:4:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4996:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "5012:7:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5021:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5008:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5008:22:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4996:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4781:8:8"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4791:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4778:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4778:21:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4800:3:8",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4774:3:8",
																"statements": []
															},
															"src": "4770:270:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "4652:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4659:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4672:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4679:4:8",
														"type": ""
													}
												],
												"src": "4624:422:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5110:747:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5148:52:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5162:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5171:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5162:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5185:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5130:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5123:16:8"
															},
															"nodeType": "YulIf",
															"src": "5120:80:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5233:52:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5247:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5256:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5247:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5270:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5219:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:12:8"
															},
															"nodeType": "YulIf",
															"src": "5209:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5321:52:8",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "5335:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5344:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5335:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5358:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5314:59:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5389:123:8",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5424:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "5426:16:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5426:18:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5426:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5409:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5419:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "5406:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5406:17:8"
																				},
																				"nodeType": "YulIf",
																				"src": "5403:43:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5459:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "5472:8:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5482:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5468:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5468:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "5459:5:8"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "5497:5:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5382:130:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "5301:4:8"
															},
															"nodeType": "YulSwitch",
															"src": "5294:218:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5610:70:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5624:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5637:4:8"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5643:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "5633:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5633:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "5624:5:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5665:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5534:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5540:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5531:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5531:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5548:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5558:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5545:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5545:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5527:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "5571:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5577:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5568:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5568:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "5586:8:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5596:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "5583:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5583:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5564:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5524:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:77:8"
															},
															"nodeType": "YulIf",
															"src": "5521:159:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5689:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5731:4:8"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5737:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "5712:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5712:34:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "5693:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "5702:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5791:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5793:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5793:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5793:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5761:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5778:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5774:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5774:6:8"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "5770:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5758:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5758:32:8"
															},
															"nodeType": "YulIf",
															"src": "5755:58:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5822:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "5835:7:8"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "5844:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5831:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5822:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5081:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5087:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5100:5:8",
														"type": ""
													}
												],
												"src": "5051:806:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:72:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5940:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5970:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5980:8:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5990:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5976:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5976:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "5949:20:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5940:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5901:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5907:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5920:5:8",
														"type": ""
													}
												],
												"src": "5862:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6059:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6118:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6120:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6120:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6120:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6090:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6083:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6083:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6076:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6076:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6098:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6109:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6105:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6105:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6113:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6101:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6101:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6095:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6095:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6072:45:8"
															},
															"nodeType": "YulIf",
															"src": "6069:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6149:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6164:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6167:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6160:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6149:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6038:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6041:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6047:7:8",
														"type": ""
													}
												],
												"src": "6007:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6261:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6307:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6316:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6319:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6309:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6309:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6309:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6282:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6291:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6303:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6274:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:32:8"
															},
															"nodeType": "YulIf",
															"src": "6271:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6348:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6342:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6332:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6227:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6238:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6250:6:8",
														"type": ""
													}
												],
												"src": "6180:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6560:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6571:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6553:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6553:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6594:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6605:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6590:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6590:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6610:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6583:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6633:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6644:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6629:18:8"
																	},
																	{
																		"hexValue": "594e50726573616c653a20414d4f554e542053414c4520414d4f554e54204558",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6649:34:8",
																		"type": "",
																		"value": "YNPresale: AMOUNT SALE AMOUNT EX"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6622:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6622:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6622:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6704:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6715:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6700:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6700:18:8"
																	},
																	{
																		"hexValue": "434545442e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6720:7:8",
																		"type": "",
																		"value": "CEED."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6693:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6693:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6737:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6749:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6760:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6737:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3c8d199788da4990dbbb010fe130b4cb5edb87bf34f6bb2211ae01d42d4f2d7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6520:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6534:4:8",
														"type": ""
													}
												],
												"src": "6369:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6949:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6966:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6977:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7000:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7011:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6996:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6996:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7016:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6989:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6989:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7050:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:18:8"
																	},
																	{
																		"hexValue": "594e50726573616c653a204d41582053414c4520414d4f554e54204558434545",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7055:34:8",
																		"type": "",
																		"value": "YNPresale: MAX SALE AMOUNT EXCEE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7110:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7121:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7106:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7106:18:8"
																	},
																	{
																		"hexValue": "442e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7126:4:8",
																		"type": "",
																		"value": "D."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7099:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7099:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7099:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7140:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7152:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7163:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7148:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7140:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cc364fbb957022b589cc43a728c90253961f2903402929b90452f721ba4a228__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6926:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6940:4:8",
														"type": ""
													}
												],
												"src": "6775:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7352:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7369:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7380:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7403:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7414:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7399:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7419:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7392:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7392:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7392:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7442:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7453:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7458:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7431:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7431:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7431:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7524:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7509:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7529:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7502:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7502:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7547:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7559:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7570:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7555:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7555:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7547:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7329:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7343:4:8",
														"type": ""
													}
												],
												"src": "7178:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7759:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7776:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7787:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7769:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7769:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7810:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7821:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7806:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7806:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7826:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7799:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7799:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7799:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7849:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7860:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7845:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7865:34:8",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7838:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7838:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7920:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7931:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:18:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7936:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7952:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7964:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7975:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7960:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7952:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7736:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7750:4:8",
														"type": ""
													}
												],
												"src": "7585:400:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8164:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8181:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8192:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8174:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8174:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8174:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8215:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8226:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8211:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8204:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8204:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8204:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8254:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8265:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8250:18:8"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8270:34:8",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8243:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8243:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8243:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8325:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8336:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8321:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8321:18:8"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8341:4:8",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8314:32:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8355:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8367:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8378:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8363:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8363:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8355:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8141:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8155:4:8",
														"type": ""
													}
												],
												"src": "7990:398:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8567:227:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8584:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8595:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8577:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8577:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8618:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8629:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8614:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8614:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8607:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8607:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8657:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8653:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8673:34:8",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8728:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8739:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8724:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8724:18:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8744:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8717:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8717:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8761:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8773:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8784:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8769:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8761:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8544:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8558:4:8",
														"type": ""
													}
												],
												"src": "8393:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8973:225:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8990:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9001:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8983:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9024:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9035:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9040:2:8",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9013:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9013:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9063:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9074:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9059:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9079:34:8",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9052:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9134:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9145:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9130:18:8"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9150:5:8",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9123:33:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9165:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9177:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9188:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9173:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9173:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9165:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8950:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8964:4:8",
														"type": ""
													}
												],
												"src": "8799:399:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9377:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9394:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9405:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9387:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9387:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9428:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9439:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9424:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9444:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:8"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9483:34:8",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9538:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9549:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:18:8"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9554:8:8",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9527:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9527:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9572:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9584:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9595:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9580:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9572:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9354:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9368:4:8",
														"type": ""
													}
												],
												"src": "9203:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9739:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9749:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9761:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9772:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9757:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9749:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9791:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9806:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9822:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9827:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9818:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9818:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9831:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9814:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9814:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9802:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9784:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9784:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9784:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9855:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9866:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9851:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9871:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9844:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9844:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9700:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9711:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9719:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9730:4:8",
														"type": ""
													}
												],
												"src": "9610:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9967:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10013:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10022:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10025:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10015:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10015:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10015:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9988:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9997:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9984:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10009:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9980:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9980:32:8"
															},
															"nodeType": "YulIf",
															"src": "9977:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10038:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10057:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10051:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10051:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10042:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10129:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10132:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10122:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10089:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10110:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "10103:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10103:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10096:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10096:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10086:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10079:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10079:40:8"
															},
															"nodeType": "YulIf",
															"src": "10076:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10145:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10155:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9933:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9944:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9956:6:8",
														"type": ""
													}
												],
												"src": "9889:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10217:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10248:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10269:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10276:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10281:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10272:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10272:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10262:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10262:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10262:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10313:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10316:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10306:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10306:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10306:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10341:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10344:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10334:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10334:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10334:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10237:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10230:9:8"
															},
															"nodeType": "YulIf",
															"src": "10227:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10368:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10377:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10380:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10373:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10373:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10368:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10202:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10205:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10211:1:8",
														"type": ""
													}
												],
												"src": "10171:217:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c3c8d199788da4990dbbb010fe130b4cb5edb87bf34f6bb2211ae01d42d4f2d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"YNPresale: AMOUNT SALE AMOUNT EX\")\n        mstore(add(headStart, 96), \"CEED.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9cc364fbb957022b589cc43a728c90253961f2903402929b90452f721ba4a228__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"YNPresale: MAX SALE AMOUNT EXCEE\")\n        mstore(add(headStart, 96), \"D.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x715994E3 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x4664FFEA EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x510A5B3 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x5C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x66B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x713 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x40C SWAP1 PUSH2 0xFEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0xFEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x485 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x45A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x485 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x468 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C CALLER DUP5 DUP5 PUSH2 0xA29 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP5 DUP5 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x545 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x49C SWAP2 DUP6 SWAP1 PUSH2 0x587 SWAP1 DUP7 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x5C0 DUP3 DUP3 PUSH2 0xD1C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x5F8 PUSH1 0x0 PUSH2 0xDFD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x40C SWAP1 PUSH2 0xFEE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x709 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0xA29 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xB SLOAD ADDRESS SWAP2 CALLVALUE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x74E SWAP2 PUSH2 0x748 SWAP1 PUSH2 0x736 SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x113A JUMP JUMPDEST PUSH2 0x741 SWAP1 PUSH1 0x1 PUSH2 0x1149 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xE4F JUMP JUMPDEST SWAP1 PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x804 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST DUP2 GT PUSH2 0x7D1 JUMPI PUSH2 0x3F8 CALLER DUP3 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x594E50726573616C653A20414D4F554E542053414C4520414D4F554E54204558 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x21A2A2A217 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x871 DUP5 DUP5 PUSH2 0xE6E JUMP JUMPDEST SWAP1 POP DUP3 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SUB PUSH2 0x986 JUMPI PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x8B5 SWAP1 PUSH2 0x89C SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x113A JUMP JUMPDEST PUSH2 0x8A7 SWAP1 PUSH1 0x1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x748 SWAP1 DUP6 SWAP1 PUSH2 0xE4F JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP3 GT PUSH2 0x927 JUMPI SELFBALANCE DUP2 GT PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x984 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP3 GT ISZERO PUSH2 0x984 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x594E50726573616C653A204D41582053414C4520414D4F554E54204558434545 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x2217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AC SWAP1 PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH2 0xA26 DUP2 PUSH2 0xDFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xCC2 SWAP1 DUP5 SWAP1 PUSH2 0x103E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD0E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x1168 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FE SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP3 DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B DUP3 DUP5 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C CALLER DUP5 DUP5 PUSH2 0xB4D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB3 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xED2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF34 DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP3 POP PUSH2 0xF42 PUSH1 0x20 DUP6 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE5B DUP3 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA2 DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP PUSH2 0xFB0 PUSH1 0x20 DUP5 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1002 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1022 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0x1028 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1091 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1077 PUSH2 0x1028 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1084 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x105B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10A8 JUMPI POP PUSH1 0x1 PUSH2 0x4A0 JUMP JUMPDEST DUP2 PUSH2 0x10B5 JUMPI POP PUSH1 0x0 PUSH2 0x4A0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x10CB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x10D5 JUMPI PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x10E6 JUMPI PUSH2 0x10E6 PUSH2 0x1028 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4A0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1114 JUMPI POP DUP2 DUP2 EXP PUSH2 0x4A0 JUMP JUMPDEST PUSH2 0x111E DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1132 PUSH2 0x1028 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1163 JUMPI PUSH2 0x1163 PUSH2 0x1028 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDC BLOCKHASH PUSH22 0x610AC417FEAB9892B7CE92037624A6A06A49936C28CD 0xD 0xCB LOG0 0xD6 PUSH17 0x6E64736F6C634300080D00330000000000 ",
							"sourceMap": "256:2807:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2888:172;;;;;;;;;;-1:-1:-1;2888:172:7;;;;;:::i;:::-;;:::i;:::-;;2141:98:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;;;;;-1:-1:-1;4238:166:1;;;;;:::i;:::-;;:::i;:::-;;;1218:14:8;;1211:22;1193:41;;1181:2;1166:18;4238:166:1;1053:187:8;3229:106:1;;;;;;;;;;-1:-1:-1;3316:12:1;;3229:106;;;1391:25:8;;;1379:2;1364:18;3229:106:1;1245:177:8;4871:478:1;;;;;;;;;;-1:-1:-1;4871:478:1;;;;;:::i;:::-;;:::i;869:99:7:-;;;;;;;;;;-1:-1:-1;952:8:7;;869:99;;952:8;;;;1902:36:8;;1890:2;1875:18;869:99:7;1760:184:8;5744:212:1;;;;;;;;;;-1:-1:-1;5744:212:1;;;;;:::i;:::-;;:::i;976:125:7:-;;;;;;;;;;-1:-1:-1;976:125:7;;;;;:::i;:::-;;:::i;3393::1:-;;;;;;;;;;-1:-1:-1;3393:125:1;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:1;3467:7;3493:18;;;;;;;;;;;;3393:125;1668:101:0;;;;;;;;;;;;;:::i;2714:162:7:-;;;;;;;;;;-1:-1:-1;2714:162:7;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;1036:85;;-1:-1:-1;;;;;1108:6:0;;;2471:51:8;;2459:2;2444:18;1036:85:0;2325:203:8;2352:102:1;;;;;;;;;;;;;:::i;6443:405::-;;;;;;;;;;-1:-1:-1;6443:405:1;;;;;:::i;:::-;;:::i;1333:597:7:-;;;:::i;1938:768::-;;;;;;;;;;-1:-1:-1;1938:768:7;;;;;:::i;:::-;;:::i;3951:149:1:-;;;;;;;;;;-1:-1:-1;3951:149:1;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:1;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2888:172:7:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;2990:21:7::1;2983:5;:28;;2975:37;;;::::0;::::1;;3023:29;::::0;-1:-1:-1;;;;;3023:22:7;::::1;::::0;:29;::::1;;;::::0;3046:5;;3023:29:::1;::::0;;;3046:5;3023:22;:29;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2888:172:::0;;:::o;2141:98:1:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:4;4360:7:1;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:1;4238:166;;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:1;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:4;5097:33:1;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:1;;3746:2:8;5140:79:1;;;3728:21:8;3785:2;3765:18;;;3758:30;3824:34;3804:18;;;3797:62;-1:-1:-1;;;3875:18:8;;;3868:38;3923:19;;5140:79:1;3544:404:8;5140:79:1;5253:57;5262:6;719:10:4;5303:6:1;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:1;;4871:478;-1:-1:-1;;;;4871:478:1:o;5744:212::-;719:10:4;5832:4:1;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:1;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;976:125:7:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1061:32:7::1;1082:4;1087:5;1061:20;:32::i;:::-;976:125:::0;;:::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2714:162:7:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2803:21:7::1;2796:5;:28;;2788:37;;;::::0;::::1;;1108:6:0::0;;2836:32:7::1;::::0;-1:-1:-1;;;;;1108:6:0;;;;2836:32:7;::::1;;;::::0;2862:5;;2836:32:::1;::::0;;;2862:5;1108:6:0;2836:32:7;::::1;;;;;;;;;;;;;::::0;::::1;;;;2352:102:1::0;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:4;6536:4:1;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:1;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:1;;4420:2:8;6623:85:1;;;4402:21:8;4459:2;4439:18;;;4432:30;4498:34;4478:18;;;4471:62;-1:-1:-1;;;4549:18:8;;;4542:35;4594:19;;6623:85:1;4218:401:8;6623:85:1;6742:67;719:10:4;6765:7:1;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:1;;6443:405;-1:-1:-1;;;6443:405:1:o;1333:597:7:-;1546:7;;1532:8;;1422:4;;1468:9;;1393:13;;1514:40;;:27;;1526:14;;1532:8;;1526:2;:14;:::i;:::-;1522:18;;:1;:18;:::i;:::-;1514:3;;:7;:27::i;:::-;:31;;:40::i;:::-;1497:57;;1580:7;;1568:8;:19;1565:358;;1616:31;;-1:-1:-1;;;1616:31:7;;1641:4;1616:31;;;2471:51:8;-1:-1:-1;;;;;1616:16:7;;;;;2444:18:8;;1616:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1606:8;:41;1603:207;;1667:41;1688:10;1699:8;1667:20;:41::i;1603:207::-;1761:33;;1769:10;;1761:33;;;;;1790:3;;1761:33;;;;1790:3;1769:10;1761:33;;;;;;;;;;;;;;;;;;;;;3023:29:::1;2888:172:::0;;:::o;1565:358::-;1863:7;;1858:3;:12;;1850:61;;;;-1:-1:-1;;;1850:61:7;;6571:2:8;1850:61:7;;;6553:21:8;6610:2;6590:18;;;6583:30;6649:34;6629:18;;;6622:62;-1:-1:-1;;;6700:18:8;;;6693:35;6745:19;;1850:61:7;6369:401:8;1938:768:7;2024:4;2049:8;2059:33;2074:9;2085:6;2059:14;:33::i;:::-;2049:43;-1:-1:-1;2125:6:7;2174:4;-1:-1:-1;;;;;2155:24:7;;;2152:506;;2244:8;;2195:16;;2212:41;;2238:14;;2244:8;;2238:2;:14;:::i;:::-;2234:18;;:1;:18;:::i;:::-;2220:8;;2212:17;;:3;;:7;:17::i;:41::-;2195:58;;2278:8;;2271:3;:15;2268:379;;2319:21;2309:8;:31;2306:214;;2364:38;;2372:10;;2364:38;;;;;2393:8;;2364:38;;;;2393:8;2372:10;2364:38;;;;;;;;;;;;;;;;;;;;;2268:379;;2306:214;2467:33;;2475:10;;2467:33;;;;;2496:3;;2467:33;;;;2496:3;2475:10;2467:33;;;;;;;;;;;;;;;;;;;2268:379;2585:8;;2580:3;:13;;2572:59;;;;-1:-1:-1;;;2572:59:7;;6977:2:8;2572:59:7;;;6959:21:8;7016:2;6996:18;;;6989:30;7055:34;7035:18;;;7028:62;-1:-1:-1;;;7106:18:8;;;7099:32;7148:19;;2572:59:7;6775:398:8;2572:59:7;2180:478;2152:506;-1:-1:-1;2695:3:7;1938:768;-1:-1:-1;;;1938:768:7:o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;7380:2:8;1998:73:0::1;::::0;::::1;7362:21:8::0;7419:2;7399:18;;;7392:30;7458:34;7438:18;;;7431:62;-1:-1:-1;;;7509:18:8;;;7502:36;7555:19;;1998:73:0::1;7178:402:8::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;10019:370:1:-;-1:-1:-1;;;;;10150:19:1;;10142:68;;;;-1:-1:-1;;;10142:68:1;;7787:2:8;10142:68:1;;;7769:21:8;7826:2;7806:18;;;7799:30;7865:34;7845:18;;;7838:62;-1:-1:-1;;;7916:18:8;;;7909:34;7960:19;;10142:68:1;7585:400:8;10142:68:1;-1:-1:-1;;;;;10228:21:1;;10220:68;;;;-1:-1:-1;;;10220:68:1;;8192:2:8;10220:68:1;;;8174:21:8;8231:2;8211:18;;;8204:30;8270:34;8250:18;;;8243:62;-1:-1:-1;;;8321:18:8;;;8314:32;8363:19;;10220:68:1;7990:398:8;10220:68:1;-1:-1:-1;;;;;10299:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1391:25:8;;;10350:32:1;;1364:18:8;10350:32:1;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:1;;7449:70;;;;-1:-1:-1;;;7449:70:1;;8595:2:8;7449:70:1;;;8577:21:8;8634:2;8614:18;;;8607:30;8673:34;8653:18;;;8646:62;-1:-1:-1;;;8724:18:8;;;8717:35;8769:19;;7449:70:1;8393:401:8;7449:70:1;-1:-1:-1;;;;;7537:23:1;;7529:71;;;;-1:-1:-1;;;7529:71:1;;9001:2:8;7529:71:1;;;8983:21:8;9040:2;9020:18;;;9013:30;9079:34;9059:18;;;9052:62;-1:-1:-1;;;9130:18:8;;;9123:33;9173:19;;7529:71:1;8799:399:8;7529:71:1;-1:-1:-1;;;;;7693:17:1;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:1;;9405:2:8;7720:74:1;;;9387:21:8;9444:2;9424:18;;;9417:30;9483:34;9463:18;;;9456:62;-1:-1:-1;;;9534:18:8;;;9527:36;9580:19;;7720:74:1;9203:402:8;7720:74:1;-1:-1:-1;;;;;7828:17:1;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:1;7945:6;-1:-1:-1;;;;;7936:35:1;;7964:6;7936:35;;;;1391:25:8;;1379:2;1364:18;;1245:177;7936:35:1;;;;;;;;7439:596;7322:713;;;:::o;1109:216:7:-;1247:31;;-1:-1:-1;;;1247:31:7;;1215:4;1247:31;;;2471:51:8;;;1215:4:7;;;1247:16;;2444:18:8;;1247:31:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1240:5;:38;;1232:47;;;;;;1290:27;;-1:-1:-1;;;1290:27:7;;-1:-1:-1;;;;;9802:32:8;;;1290:27:7;;;9784:51:8;9851:18;;;9844:34;;;1290:15:7;;;;;9757:18:8;;1290:27:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;3451:96:5:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:5:o;3836:::-;3894:7;3920:5;3924:1;3920;:5;:::i;3721:172:1:-;3807:4;3823:42;719:10:4;3847:9:1;3858:6;3823:9;:42::i;14:173:8:-;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:8:o;451:597::-;563:4;592:2;621;610:9;603:21;653:6;647:13;696:6;691:2;680:9;676:18;669:34;721:1;731:140;745:6;742:1;739:13;731:140;;;840:14;;;836:23;;830:30;806:17;;;825:2;802:26;795:66;760:10;;731:140;;;889:6;886:1;883:13;880:91;;;959:1;954:2;945:6;934:9;930:22;926:31;919:42;880:91;-1:-1:-1;1032:2:8;1011:15;-1:-1:-1;;1007:29:8;992:45;;;;1039:2;988:54;;451:597;-1:-1:-1;;;451:597:8:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;2140:180::-;2199:6;2252:2;2240:9;2231:7;2227:23;2223:32;2220:52;;;2268:1;2265;2258:12;2220:52;-1:-1:-1;2291:23:8;;2140:180;-1:-1:-1;2140:180:8:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:356::-;3000:2;2982:21;;;3019:18;;;3012:30;3078:34;3073:2;3058:18;;3051:62;3145:2;3130:18;;2798:356::o;3159:380::-;3238:1;3234:12;;;;3281;;;3302:61;;3356:4;3348:6;3344:17;3334:27;;3302:61;3409:2;3401:6;3398:14;3378:18;3375:38;3372:161;;3455:10;3450:3;3446:20;3443:1;3436:31;3490:4;3487:1;3480:15;3518:4;3515:1;3508:15;3372:161;;3159:380;;;:::o;3953:127::-;4014:10;4009:3;4005:20;4002:1;3995:31;4045:4;4042:1;4035:15;4069:4;4066:1;4059:15;4085:128;4125:3;4156:1;4152:6;4149:1;4146:13;4143:39;;;4162:18;;:::i;:::-;-1:-1:-1;4198:9:8;;4085:128::o;4624:422::-;4713:1;4756:5;4713:1;4770:270;4791:7;4781:8;4778:21;4770:270;;;4850:4;4846:1;4842:6;4838:17;4832:4;4829:27;4826:53;;;4859:18;;:::i;:::-;4909:7;4899:8;4895:22;4892:55;;;4929:16;;;;4892:55;5008:22;;;;4968:15;;;;4770:270;;;4774:3;4624:422;;;;;:::o;5051:806::-;5100:5;5130:8;5120:80;;-1:-1:-1;5171:1:8;5185:5;;5120:80;5219:4;5209:76;;-1:-1:-1;5256:1:8;5270:5;;5209:76;5301:4;5319:1;5314:59;;;;5387:1;5382:130;;;;5294:218;;5314:59;5344:1;5335:10;;5358:5;;;5382:130;5419:3;5409:8;5406:17;5403:43;;;5426:18;;:::i;:::-;-1:-1:-1;;5482:1:8;5468:16;;5497:5;;5294:218;;5596:2;5586:8;5583:16;5577:3;5571:4;5568:13;5564:36;5558:2;5548:8;5545:16;5540:2;5534:4;5531:12;5527:35;5524:77;5521:159;;;-1:-1:-1;5633:19:8;;;5665:5;;5521:159;5712:34;5737:8;5731:4;5712:34;:::i;:::-;5782:6;5778:1;5774:6;5770:19;5761:7;5758:32;5755:58;;;5793:18;;:::i;:::-;5831:20;;5051:806;-1:-1:-1;;;5051:806:8:o;5862:140::-;5920:5;5949:47;5990:4;5980:8;5976:19;5970:4;5949:47;:::i;6007:168::-;6047:7;6113:1;6109;6105:6;6101:14;6098:1;6095:21;6090:1;6083:9;6076:17;6072:45;6069:71;;;6120:18;;:::i;:::-;-1:-1:-1;6160:9:8;;6007:168::o;6180:184::-;6250:6;6303:2;6291:9;6282:7;6278:23;6274:32;6271:52;;;6319:1;6316;6309:12;6271:52;-1:-1:-1;6342:16:8;;6180:184;-1:-1:-1;6180:184:8:o;9889:277::-;9956:6;10009:2;9997:9;9988:7;9984:23;9980:32;9977:52;;;10025:1;10022;10015:12;9977:52;10057:9;10051:16;10110:5;10103:13;10096:21;10089:5;10086:32;10076:60;;10132:1;10129;10122:12;10171:217;10211:1;10237;10227:132;;10281:10;10276:3;10272:20;10269:1;10262:31;10316:4;10313:1;10306:15;10344:4;10341:1;10334:15;10227:132;-1:-1:-1;10373:9:8;;10171:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "920600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24665",
								"balanceOf(address)": "2651",
								"buy()": "infinite",
								"decimals()": "2334",
								"decreaseAllowance(address,uint256)": "26910",
								"increaseAllowance(address,uint256)": "27002",
								"name()": "infinite",
								"owner()": "2368",
								"renounceOwnership()": "28140",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferBalanceToUser(address,uint256)": "infinite",
								"transferBalanceToYuki(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28422",
								"transferTokenToUser(address,uint256)": "infinite"
							},
							"internal": {
								"_transferTokenToUser(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 357,
									"end": 358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 358,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 341,
									"end": 358,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 341,
									"end": 358,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 341,
									"end": 358,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 402,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 390,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 390,
									"end": 414,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 423,
									"end": 440,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 423,
									"end": 440,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 440,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 440,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 447,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 447,
									"end": 465,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 472,
									"end": 489,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 472,
									"end": 489,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 472,
									"end": 489,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 472,
									"end": 489,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 487,
									"end": 489,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 472,
									"end": 489,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 472,
									"end": 489,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 472,
									"end": 489,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 498,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 498,
									"end": 861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2CBAB5B490283932B9B0B632902830B4B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "594E2D505073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 646,
									"end": 668,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 646,
									"end": 668,
									"name": "PUSH",
									"source": 7,
									"value": "313CE567"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFF"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "STATICCALL",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 646,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 646,
									"end": 670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 637,
									"end": 645,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 637,
									"end": 670,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 637,
									"end": 670,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 670,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 681,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 681,
									"end": 726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 687,
									"end": 697,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 687,
									"end": 697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 711,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 711,
									"end": 725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 711,
									"end": 713,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 711,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 711,
									"end": 725,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 711,
									"end": 725,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 711,
									"end": 725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 699,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 699,
									"end": 725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 699,
									"end": 708,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 699,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 699,
									"end": 725,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 725,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 699,
									"end": 725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 681,
									"end": 686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 681,
									"end": 726,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 681,
									"end": 726,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 681,
									"end": 726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 763,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 745,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 745,
									"end": 748,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 745,
									"end": 763,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 737,
									"end": 744,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 737,
									"end": 763,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 783,
									"end": 786,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 783,
									"end": 786,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 783,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 783,
									"end": 801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 789,
									"end": 801,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 789,
									"end": 801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 783,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 783,
									"end": 801,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 783,
									"end": 801,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 783,
									"end": 801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 774,
									"end": 782,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 774,
									"end": 801,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 812,
									"end": 819,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 812,
									"end": 826,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 812,
									"end": 826,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 812,
									"end": 826,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 812,
									"end": 826,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 837,
									"end": 845,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 837,
									"end": 853,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8311,
									"end": 8700,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 8311,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8394,
									"end": 8415,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8394,
									"end": 8415,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2945,
									"end": 2947,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2927,
									"end": 2948,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2984,
									"end": 2986,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2964,
									"end": 2982,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2964,
									"end": 2982,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2964,
									"end": 2982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 2987,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3056,
									"name": "PUSH",
									"source": 8,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 3003,
									"end": 3021,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3003,
									"end": 3021,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3003,
									"end": 3021,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2996,
									"end": 3057,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 8386,
									"end": 8451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8538,
									"end": 8544,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8534,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8522,
									"end": 8534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8522,
									"end": 8544,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8563,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8572,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8576,
									"end": 8582,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8576,
									"end": 8582,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8563,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8576,
									"end": 8582,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8576,
									"end": 8582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8554,
									"end": 8582,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3407,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3382,
									"end": 3407,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3382,
									"end": 3407,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8614,
									"end": 8615,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8614,
									"end": 8615,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3370,
									"end": 3372,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3355,
									"end": 3373,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8597,
									"end": 8634,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8700,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8700,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8700,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 550,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 120,
									"end": 126,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 134,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 136,
									"end": 142,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 150,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 152,
									"end": 158,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 208,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 193,
									"end": 202,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 184,
									"end": 191,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 180,
									"end": 203,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 176,
									"end": 209,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 173,
									"end": 226,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 173,
									"end": 226,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 173,
									"end": 226,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 222,
									"end": 223,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 220,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 212,
									"end": 224,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 173,
									"end": 226,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 173,
									"end": 226,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 248,
									"end": 264,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 248,
									"end": 264,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 293,
									"end": 324,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 293,
									"end": 324,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 283,
									"end": 325,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 283,
									"end": 325,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 273,
									"end": 343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 273,
									"end": 343,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 339,
									"end": 340,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 337,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 329,
									"end": 341,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 273,
									"end": 343,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 273,
									"end": 343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 407,
									"end": 409,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 392,
									"end": 410,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 392,
									"end": 410,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 386,
									"end": 411,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 451,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 436,
									"end": 454,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 436,
									"end": 454,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 430,
									"end": 455,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 499,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 539,
									"end": 542,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 524,
									"end": 543,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 524,
									"end": 543,
									"name": "SWAP10",
									"source": 8
								},
								{
									"begin": 524,
									"end": 543,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 518,
									"end": 544,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 362,
									"end": 367,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 362,
									"end": 367,
									"name": "SWAP11",
									"source": 8
								},
								{
									"begin": 386,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 386,
									"end": 411,
									"name": "SWAP10",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 430,
									"end": 455,
									"name": "SWAP8",
									"source": 8
								},
								{
									"begin": 474,
									"end": 499,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 518,
									"end": 544,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 518,
									"end": 544,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 550,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 550,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 828,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 623,
									"end": 629,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 678,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 664,
									"end": 673,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 655,
									"end": 662,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 651,
									"end": 674,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 647,
									"end": 679,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 644,
									"end": 696,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 644,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 644,
									"end": 696,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 692,
									"end": 693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 689,
									"end": 690,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 682,
									"end": 694,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 644,
									"end": 696,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 644,
									"end": 696,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 718,
									"end": 734,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 774,
									"end": 778,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 767,
									"end": 772,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 763,
									"end": 779,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 756,
									"end": 761,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 753,
									"end": 780,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 743,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 743,
									"end": 798,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 794,
									"end": 795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 791,
									"end": 792,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 784,
									"end": 796,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 743,
									"end": 798,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 743,
									"end": 798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 817,
									"end": 822,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 555,
									"end": 828,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 828,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 833,
									"end": 960,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 833,
									"end": 960,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 894,
									"end": 904,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 889,
									"end": 892,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 885,
									"end": 905,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 882,
									"end": 883,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 875,
									"end": 906,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 925,
									"end": 929,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 922,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 915,
									"end": 930,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 949,
									"end": 953,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 946,
									"end": 947,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 954,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1055,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1097,
									"end": 1102,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1055,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1139,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1130,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1140,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1191,
									"end": 1195,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1187,
									"end": 1188,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1189,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1179,
									"end": 1196,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1173,
									"end": 1177,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1170,
									"end": 1197,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1220,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1220,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1167,
									"end": 1220,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1200,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1200,
									"end": 1218,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1200,
									"end": 1218,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1200,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1250,
									"end": 1257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1240,
									"end": 1248,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1258,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1233,
									"end": 1288,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1233,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1233,
									"end": 1288,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1233,
									"end": 1288,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1233,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1349,
									"end": 1371,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1349,
									"end": 1371,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1349,
									"end": 1371,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1349,
									"end": 1371,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1324,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1324,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1324,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1324,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1111,
									"end": 1381,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1118,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 965,
									"end": 1387,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1446,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1479,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1461,
									"end": 1541,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1526,
									"end": 1531,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1541,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 1461,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1560,
									"end": 1564,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1626,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1550,
									"end": 1626,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1597,
									"end": 1598,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1611,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1611,
									"end": 1616,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1626,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 1550,
									"end": 1626,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1642,
									"end": 1646,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1660,
									"end": 1661,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 1714,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1714,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1714,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1655,
									"end": 1714,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1728,
									"end": 1729,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1723,
									"end": 1853,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1853,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1723,
									"end": 1853,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1635,
									"end": 1853,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1714,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 1655,
									"end": 1714,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1685,
									"end": 1686,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1676,
									"end": 1686,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1676,
									"end": 1686,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1699,
									"end": 1704,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 1723,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1760,
									"end": 1763,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1750,
									"end": 1758,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1787,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1787,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1744,
									"end": 1787,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1823,
									"end": 1824,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1809,
									"end": 1825,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1809,
									"end": 1825,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1838,
									"end": 1843,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1838,
									"end": 1843,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1853,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1635,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1635,
									"end": 1853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1937,
									"end": 1939,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1927,
									"end": 1935,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1924,
									"end": 1940,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1918,
									"end": 1921,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 1912,
									"end": 1916,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1905,
									"end": 1941,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1899,
									"end": 1901,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 1889,
									"end": 1897,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 1902,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1881,
									"end": 1883,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1875,
									"end": 1879,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1872,
									"end": 1884,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1868,
									"end": 1903,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1942,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2021,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1862,
									"end": 2021,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1974,
									"end": 1993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1974,
									"end": 1993,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1974,
									"end": 1993,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2006,
									"end": 2011,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 2021,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1862,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 2078,
									"end": 2086,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2053,
									"end": 2087,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2087,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 2053,
									"end": 2087,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2123,
									"end": 2129,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2120,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2111,
									"end": 2130,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2102,
									"end": 2109,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2099,
									"end": 2131,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2096,
									"end": 2154,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2096,
									"end": 2154,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2096,
									"end": 2154,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2172,
									"end": 2192,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2172,
									"end": 2192,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1392,
									"end": 2198,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2203,
									"end": 2343,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2203,
									"end": 2343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2290,
									"end": 2337,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 2331,
									"end": 2335,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2321,
									"end": 2329,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2336,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2311,
									"end": 2315,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2290,
									"end": 2337,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2290,
									"end": 2337,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2348,
									"end": 2516,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 2348,
									"end": 2516,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2455,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2450,
									"end": 2451,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2452,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2439,
									"end": 2440,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2436,
									"end": 2457,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2424,
									"end": 2433,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2417,
									"end": 2434,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2413,
									"end": 2458,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2410,
									"end": 2481,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2410,
									"end": 2481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2410,
									"end": 2481,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2461,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2461,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2461,
									"end": 2479,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2461,
									"end": 2479,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 2461,
									"end": 2479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2501,
									"end": 2510,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2501,
									"end": 2510,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2348,
									"end": 2516,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2521,
									"end": 2738,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2521,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2561,
									"end": 2562,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2577,
									"end": 2709,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2577,
									"end": 2709,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2631,
									"end": 2641,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2626,
									"end": 2629,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2622,
									"end": 2642,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2619,
									"end": 2620,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 2643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2656,
									"end": 2671,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2691,
									"end": 2692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2684,
									"end": 2699,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2577,
									"end": 2709,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 2577,
									"end": 2709,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2723,
									"end": 2732,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2732,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2738,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 3103,
									"end": 3231,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3103,
									"end": 3231,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3143,
									"end": 3146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3176,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 3168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3164,
									"end": 3177,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3200,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3161,
									"end": 3200,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3161,
									"end": 3200,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3180,
									"end": 3198,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3180,
									"end": 3198,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3180,
									"end": 3198,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 3180,
									"end": 3198,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 3180,
									"end": 3198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3216,
									"end": 3225,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3216,
									"end": 3225,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3103,
									"end": 3231,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3497,
									"end": 3498,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3493,
									"end": 3505,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3505,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3505,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3505,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3540,
									"end": 3552,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3540,
									"end": 3552,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3540,
									"end": 3552,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3561,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3561,
									"end": 3622,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3615,
									"end": 3619,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 3607,
									"end": 3613,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3603,
									"end": 3620,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3593,
									"end": 3620,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3561,
									"end": 3622,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 3561,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3668,
									"end": 3670,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3660,
									"end": 3666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3671,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3634,
									"end": 3672,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3631,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 3631,
									"end": 3792,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3714,
									"end": 3724,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 3709,
									"end": 3712,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3705,
									"end": 3725,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3702,
									"end": 3703,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3695,
									"end": 3726,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3749,
									"end": 3753,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3746,
									"end": 3747,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3739,
									"end": 3754,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3774,
									"end": 3775,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3767,
									"end": 3782,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3631,
									"end": 3792,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 3631,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3631,
									"end": 3792,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3418,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 3063,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6dc4075610ac417feab9892b7ce92037624a6a06a49936c28cd0dcba0d6706e64736f6c634300080d0033",
									".code": [
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "A457C2D7"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "A457C2D7"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "A6F2AE3A"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "715994E3"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "39509351"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "4664FFEA"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "510A5B3"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 256,
											"end": 3063,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 952,
											"end": 960,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 952,
											"end": 960,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 952,
											"end": 960,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 952,
											"end": 960,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 952,
											"end": 960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 952,
											"end": 960,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 869,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2325,
											"end": 2528,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 3011,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 2988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 3011,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2983,
											"end": 3011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2975,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3023,
											"end": 3045,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3045,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3051,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3051,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3045,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3748,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3824,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3868,
											"end": 3906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3923,
											"end": 3942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3544,
											"end": 3948,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1082,
											"end": 1086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 976,
											"end": 1101,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2714,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 2824,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2824,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2824,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2788,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2868,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4461,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4432,
											"end": 4462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4532,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4533,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4542,
											"end": 4577,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4594,
											"end": 4613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4218,
											"end": 4619,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6765,
											"end": 6772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1333,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1532,
											"end": 1540,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1426,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1393,
											"end": 1406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1514,
											"end": 1541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1532,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1532,
											"end": 1540,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1526,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1541,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1514,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1587,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1565,
											"end": 1923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1641,
											"end": 1645,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1616,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1647,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1603,
											"end": 1810,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1688,
											"end": 1698,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1699,
											"end": 1707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1667,
											"end": 1708,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1603,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1603,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1779,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1790,
											"end": 1793,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1790,
											"end": 1793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1790,
											"end": 1793,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1779,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3060,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1565,
											"end": 1923,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1565,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1863,
											"end": 1870,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1870,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1870,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6573,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6574,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6612,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6683,
											"name": "PUSH",
											"source": 8,
											"value": "594E50726573616C653A20414D4F554E542053414C4520414D4F554E54204558"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6684,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21A2A2A217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6693,
											"end": 6728,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6764,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6745,
											"end": 6764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 6369,
											"end": 6770,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2057,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2091,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2152,
											"end": 2658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2252,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2244,
											"end": 2252,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2212,
											"end": 2253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2252,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2244,
											"end": 2252,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2238,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2228,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2220,
											"end": 2228,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2212,
											"end": 2229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2215,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2212,
											"end": 2229,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2212,
											"end": 2253,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2212,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2278,
											"end": 2286,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2286,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2268,
											"end": 2647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2340,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2340,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2306,
											"end": 2520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2401,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2401,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2268,
											"end": 2647,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2520,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2306,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2485,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2485,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2500,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2268,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2585,
											"end": 2593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2593,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7089,
											"name": "PUSH",
											"source": 8,
											"value": "594E50726573616C653A204D41582053414C4520414D4F554E54204558434545"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7099,
											"end": 7131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7148,
											"end": 7167,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7148,
											"end": 7167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 6775,
											"end": 7173,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2572,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2658,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2152,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 2706,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7380,
											"end": 7382,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7419,
											"end": 7421,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 7399,
											"end": 7417,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7399,
											"end": 7417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7399,
											"end": 7417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7392,
											"end": 7422,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7492,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7538,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7555,
											"end": 7574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7178,
											"end": 7580,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7789,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7826,
											"end": 7828,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7806,
											"end": 7824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7799,
											"end": 7829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7899,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7838,
											"end": 7900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7943,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7960,
											"end": 7979,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7960,
											"end": 7979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7585,
											"end": 7985,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8194,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8231,
											"end": 8233,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8304,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8243,
											"end": 8305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8382,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8363,
											"end": 8382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7990,
											"end": 8388,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8598,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8707,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8646,
											"end": 8708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8752,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8393,
											"end": 8794,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9001,
											"end": 9003,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9042,
											"name": "PUSH",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9013,
											"end": 9043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9113,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9059,
											"end": 9077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9123,
											"end": 9156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8799,
											"end": 9198,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9446,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9447,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9517,
											"name": "PUSH",
											"source": 8,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9456,
											"end": 9518,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9552,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9534,
											"end": 9552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9527,
											"end": 9563,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9580,
											"end": 9599,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9580,
											"end": 9599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9203,
											"end": 9605,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1325,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1109,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1219,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1219,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1263,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 1247,
											"end": 1263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1247,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1232,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9802,
											"end": 9834,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9802,
											"end": 9834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9802,
											"end": 9834,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9784,
											"end": 9835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9844,
											"end": 9878,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9844,
											"end": 9878,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9844,
											"end": 9878,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1305,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1305,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1290,
											"end": 1305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1290,
											"end": 1317,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 451,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 451,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 563,
											"end": 567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 623,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 610,
											"end": 619,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 603,
											"end": 624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 647,
											"end": 660,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 696,
											"end": 702,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 691,
											"end": 693,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 680,
											"end": 689,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 676,
											"end": 694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 669,
											"end": 703,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 731,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 742,
											"end": 743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 752,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 731,
											"end": 871,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 731,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 731,
											"end": 871,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 840,
											"end": 854,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 840,
											"end": 854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 840,
											"end": 854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 836,
											"end": 859,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 836,
											"end": 859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 830,
											"end": 860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 806,
											"end": 823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 806,
											"end": 823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 806,
											"end": 823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 825,
											"end": 827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 795,
											"end": 861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 760,
											"end": 770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 760,
											"end": 770,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 731,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 731,
											"end": 871,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 731,
											"end": 871,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 731,
											"end": 871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 889,
											"end": 895,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 886,
											"end": 887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 883,
											"end": 896,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 880,
											"end": 971,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 880,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 880,
											"end": 971,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 959,
											"end": 960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 930,
											"end": 952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 926,
											"end": 957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 919,
											"end": 961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 880,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 880,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1007,
											"end": 1036,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1037,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1037,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1042,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 451,
											"end": 1048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 451,
											"end": 1048,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2140,
											"end": 2320,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2140,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2238,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2250,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2223,
											"end": 2255,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2270,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2220,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2291,
											"end": 2314,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2320,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2320,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2660,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2783,
											"end": 2785,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2749,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2533,
											"end": 2793,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2798,
											"end": 3154,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2798,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 3003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3042,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3112,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 3154,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3159,
											"end": 3539,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 3159,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3293,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3293,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3302,
											"end": 3363,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3360,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3361,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3363,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3302,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3411,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3398,
											"end": 3412,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3413,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3372,
											"end": 3533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3465,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3450,
											"end": 3453,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3446,
											"end": 3466,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3467,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3522,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3533,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3372,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3539,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3953,
											"end": 4080,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3953,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4014,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4009,
											"end": 4012,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4005,
											"end": 4025,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4049,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4042,
											"end": 4043,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4213,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4085,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4125,
											"end": 4128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4150,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4182,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4143,
											"end": 4182,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4085,
											"end": 4213,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 4714,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4756,
											"end": 4761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 4714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4781,
											"end": 4789,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4778,
											"end": 4799,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4850,
											"end": 4854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4855,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4856,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4859,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 4916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 4907,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4917,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4947,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4892,
											"end": 4947,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4947,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4892,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5030,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5030,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 5008,
											"end": 5030,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 4983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4770,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 5046,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5051,
											"end": 5857,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5051,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5100,
											"end": 5105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5138,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5120,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5120,
											"end": 5200,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5185,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5185,
											"end": 5190,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5120,
											"end": 5200,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5120,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5209,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5209,
											"end": 5285,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5256,
											"end": 5257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5270,
											"end": 5275,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5209,
											"end": 5285,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5209,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5320,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5314,
											"end": 5373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5373,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5314,
											"end": 5373,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5388,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5382,
											"end": 5512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5512,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5382,
											"end": 5512,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5294,
											"end": 5512,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5373,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5314,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5335,
											"end": 5345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5358,
											"end": 5363,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5512,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5382,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5422,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5409,
											"end": 5417,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5423,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5403,
											"end": 5446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5483,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5468,
											"end": 5484,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5484,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5497,
											"end": 5502,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5512,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5294,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5294,
											"end": 5512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5598,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5586,
											"end": 5594,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5583,
											"end": 5599,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5571,
											"end": 5575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5581,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5600,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 5548,
											"end": 5556,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5561,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5542,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 5534,
											"end": 5538,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5543,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5524,
											"end": 5601,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5521,
											"end": 5680,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5521,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5521,
											"end": 5680,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5633,
											"end": 5652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5652,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5652,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5521,
											"end": 5680,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5521,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5737,
											"end": 5745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5731,
											"end": 5735,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5712,
											"end": 5746,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5746,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5712,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5780,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5758,
											"end": 5790,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5813,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 5755,
											"end": 5813,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5851,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5857,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5051,
											"end": 5857,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5862,
											"end": 6002,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5862,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 5990,
											"end": 5994,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5980,
											"end": 5988,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5976,
											"end": 5995,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5970,
											"end": 5974,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5949,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5949,
											"end": 5996,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6007,
											"end": 6175,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6007,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6111,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6101,
											"end": 6115,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6092,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6140,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6069,
											"end": 6140,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6120,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6175,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6180,
											"end": 6364,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6180,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6305,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6300,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6282,
											"end": 6289,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6278,
											"end": 6301,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6274,
											"end": 6306,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 6271,
											"end": 6323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6321,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6323,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 6271,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6342,
											"end": 6358,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6180,
											"end": 6364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6180,
											"end": 6364,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9889,
											"end": 10166,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 9889,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9956,
											"end": 9962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10009,
											"end": 10011,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9997,
											"end": 10006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9988,
											"end": 9995,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9984,
											"end": 10007,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9980,
											"end": 10012,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10029,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9977,
											"end": 10029,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10015,
											"end": 10027,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10029,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 9977,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10067,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10116,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10096,
											"end": 10117,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10089,
											"end": 10094,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10086,
											"end": 10118,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10076,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10076,
											"end": 10136,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10130,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10134,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10388,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 10171,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10211,
											"end": 10212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10227,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10227,
											"end": 10359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10281,
											"end": 10291,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 10269,
											"end": 10270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10262,
											"end": 10293,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10320,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10313,
											"end": 10314,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10306,
											"end": 10321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10344,
											"end": 10348,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10341,
											"end": 10342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10334,
											"end": 10349,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10227,
											"end": 10359,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10227,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10373,
											"end": 10382,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10373,
											"end": 10382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10388,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy()": "a6f2ae3a",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferBalanceToUser(address,uint256)": "0510a5b3",
							"transferBalanceToYuki(uint256)": "715994e3",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferTokenToUser(address,uint256)": "4664ffea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountPerETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSale\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"transferBalanceToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"transferBalanceToYuki\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"name\":\"transferTokenToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YNPresalePair.sol\":\"YNPresalePair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/YERC20.sol\":{\"keccak256\":\"0x58a8d8467f806e2dffd63fd4b493b55bb949c03df5e313195aa034fe0ed1891f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f0610270ba22288a493ab92cf79fd9b487b26072690f01de66d477e61f60a5\",\"dweb:/ipfs/QmbACa6uJTGSCTsq36k8MXUhTC4px7pi3MfXVm3Qt2E8hq\"]},\"contracts/YNPresalePair.sol\":{\"keccak256\":\"0xf9c16b493e7400ac13342b4b17e3b56d486d178747cbd778dc89ae76aa8e3572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://311f8fd12156f574637cb1f9534410f105a98c9a6a56d08940f1110b7e75a4ef\",\"dweb:/ipfs/QmNv7cf5s3yVVT2EGRsxou5J2WBrJGTXagbTDaWvyu64nL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1204,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_buyFee",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1207,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_saleFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1214,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "ETH",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1217,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_maxBuy",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1220,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_maxSale",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1223,
								"contract": "contracts/YNPresalePair.sol:YNPresalePair",
								"label": "_decimal",
								"offset": 0,
								"slot": "11",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							775
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 776,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								775
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							775
						],
						"ERC20": [
							650
						],
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							753
						]
					},
					"id": 651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 729,
							"src": "115:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 754,
							"src": "138:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 651,
							"sourceUnit": 776,
							"src": "180:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 111,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "1406:7:1"
									},
									"id": 112,
									"nodeType": "InheritanceSpecifier",
									"src": "1406:7:1"
								},
								{
									"baseName": {
										"id": 113,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "1415:6:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "1415:6:1"
								},
								{
									"baseName": {
										"id": 115,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "1423:14:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "1423:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "215:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 650,
							"linearizedBaseContracts": [
								650,
								753,
								728,
								775
							],
							"name": "ERC20",
							"nameLocation": "1397:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1480:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1444:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 119,
										"keyType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1452:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1444:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1463:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1552:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1496:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 125,
										"keyType": {
											"id": 121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1504:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1496:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 124,
											"keyType": {
												"id": 122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1523:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1515:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1534:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1586:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1570:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1620:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1605:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1605:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1646:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 650,
									"src": "1631:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1631:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2019:57:1",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2029:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2037:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2029:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2029:13:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2052:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2052:17:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1660:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1989:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1975:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1975:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2010:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1996:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:44:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:0:1"
									},
									"scope": 650,
									"src": "1963:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										740
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2210:29:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "2227:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "2220:12:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2082:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2150:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2177:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2195:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2195:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:15:1"
									},
									"scope": 650,
									"src": "2141:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										746
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2423:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2433:14:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2245:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2361:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:1"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2408:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:15:1"
									},
									"scope": 650,
									"src": "2352:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3143:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3160:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "3153:9:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2460:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3087:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3118:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3136:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 173,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3136:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:7:1"
									},
									"scope": 650,
									"src": "3078:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										659
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3299:36:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "3316:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3309:19:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3175:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3238:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3272:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3290:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3289:9:1"
									},
									"scope": 650,
									"src": "3229:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										667
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3476:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 198,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3493:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 200,
													"indexExpression": {
														"id": 199,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3503:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3493:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 201,
												"nodeType": "Return",
												"src": "3486:25:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3341:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3402:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3449:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3420:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3412:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:17:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3467:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:9:1"
									},
									"scope": 650,
									"src": "3393:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										677
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3813:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 215,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "3833:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3833:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3847:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3858:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3823:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "3823:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3882:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 213,
												"id": 222,
												"nodeType": "Return",
												"src": "3875:11:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3524:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3730:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3789:8:1"
									},
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3747:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3739:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3766:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3758:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3807:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3807:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3806:6:1"
									},
									"scope": 650,
									"src": "3721:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4049:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 235,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4066:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 237,
														"indexExpression": {
															"id": 236,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4078:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4066:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 239,
													"indexExpression": {
														"id": 238,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4085:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4066:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 240,
												"nodeType": "Return",
												"src": "4059:34:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3899:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3960:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4022:8:1"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3978:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3970:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "3985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:32:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4040:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:9:1"
									},
									"scope": 650,
									"src": "3951:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "4327:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 254,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "4346:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4346:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "4369:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4337:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4337:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "4337:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4393:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 252,
												"id": 261,
												"nodeType": "Return",
												"src": "4386:11:1"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4106:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4247:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4303:8:1"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4263:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4255:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4280:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4272:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:33:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4321:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4321:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4320:6:1"
									},
									"scope": 650,
									"src": "4238:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										709
									],
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "5013:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "5033:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "5041:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5052:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5023:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "5023:36:1"
											},
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5078:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5070:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 284,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "5097:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 286,
														"indexExpression": {
															"id": 285,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "5109:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5097:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 289,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 287,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5117:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5117:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5097:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5070:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "5148:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 293,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "5168:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5148:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5176:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5140:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "5140:79:1"
											},
											{
												"id": 307,
												"nodeType": "UncheckedBlock",
												"src": "5229:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 299,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "5262:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 300,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5270:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5270:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 302,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "5284:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 303,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "5303:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5284:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 298,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "5253:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5253:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 306,
														"nodeType": "ExpressionStatement",
														"src": "5253:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 275,
												"id": 309,
												"nodeType": "Return",
												"src": "5331:11:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4410:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4880:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4989:8:1"
									},
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4910:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4902:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4934:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4926:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4961:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4953:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:81:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5007:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5007:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5006:6:1"
									},
									"scope": 650,
									"src": "4871:478:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5838:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 322,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5857:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5857:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "5871:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 325,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "5880:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 328,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 326,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "5892:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5892:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5880:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 330,
																"indexExpression": {
																	"id": 329,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "5906:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5880:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 331,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5917:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5880:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 321,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "5848:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5848:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "5848:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5945:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 320,
												"id": 336,
												"nodeType": "Return",
												"src": "5938:11:1"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "5355:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5753:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5779:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5771:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5796:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5788:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:37:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5832:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5832:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:6:1"
									},
									"scope": 650,
									"src": "5744:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6542:306:1",
										"statements": [
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6560:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "6552:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6552:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6579:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 353,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 351,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "6591:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6591:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6579:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 355,
													"indexExpression": {
														"id": 354,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "6605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6579:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6552:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 358,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "6631:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 359,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "6651:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6631:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6668:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6623:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "6623:85:1"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "6718:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 365,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "6751:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6751:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 367,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "6765:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 368,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "6774:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 369,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "6793:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6774:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 364,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "6742:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "6742:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6837:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 347,
												"id": 375,
												"nodeType": "Return",
												"src": "6830:11:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5962:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6452:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6478:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6470:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6495:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6487:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:42:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6536:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6536:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6535:6:1"
									},
									"scope": 650,
									"src": "6443:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "7439:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "7457:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7475:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7467:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 389,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7467:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7467:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7457:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7479:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7449:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7449:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "7449:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "7537:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7558:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7550:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7550:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7550:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7537:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7562:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "7529:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7632:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7640:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7651:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "7611:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7611:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "7611:47:1"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7677:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "7669:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7669:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"baseExpression": {
														"id": 415,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "7693:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 417,
													"indexExpression": {
														"id": 416,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "7703:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7693:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7669:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "7728:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 421,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "7745:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7753:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7720:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7720:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "7720:74:1"
											},
											{
												"id": 434,
												"nodeType": "UncheckedBlock",
												"src": "7804:77:1",
												"statements": [
													{
														"expression": {
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 426,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "7828:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 428,
																"indexExpression": {
																	"id": 427,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "7838:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7828:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 429,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "7848:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 430,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "7864:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7848:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7828:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 433,
														"nodeType": "ExpressionStatement",
														"src": "7828:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 435,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "7890:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 437,
														"indexExpression": {
															"id": 436,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7900:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7890:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 438,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "7914:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7890:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "7890:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 442,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7945:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7953:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7964:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "7936:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7936:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "EmitStatement",
												"src": "7931:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "8002:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "8010:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8021:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "7982:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7982:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "7982:46:1"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "6854:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7331:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7358:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7350:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7382:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7374:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7409:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "7401:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:81:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7439:0:1"
									},
									"scope": 650,
									"src": "7322:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "8376:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "8394:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8413:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8405:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 464,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8405:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8405:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8394:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8417:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8386:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "8386:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8491:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8483:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8483:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8483:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8504:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8462:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "8462:49:1"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 481,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "8522:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 482,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "8538:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8522:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "8522:22:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 485,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8554:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 487,
														"indexExpression": {
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8564:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8554:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 488,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "8576:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8554:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8554:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8614:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8606:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 492,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8606:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8606:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8618:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8627:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "8597:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "8592:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8673:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8665:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 501,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8665:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8665:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "8677:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "8686:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "8645:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8645:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8645:48:1"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "8041:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8320:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8351:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8343:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8325:33:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8376:0:1"
									},
									"scope": 650,
									"src": "8311:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "9085:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 519,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "9103:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9122:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9114:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9114:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9114:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9103:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9126:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9095:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9095:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "9095:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9194:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9211:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9203:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9203:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "9215:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "9173:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9173:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "9173:49:1"
											},
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9241:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "9233:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"baseExpression": {
														"id": 539,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "9258:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 541,
													"indexExpression": {
														"id": 540,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "9268:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9258:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9233:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 544,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "9294:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 545,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "9312:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9294:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9320:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9286:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9286:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "9286:71:1"
											},
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "9367:79:1",
												"statements": [
													{
														"expression": {
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 550,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "9391:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 552,
																"indexExpression": {
																	"id": 551,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "9401:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9391:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 553,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "9412:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 554,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "9429:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9412:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9391:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 557,
														"nodeType": "ExpressionStatement",
														"src": "9391:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 559,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9455:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 560,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "9471:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9455:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "9455:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 564,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9502:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9519:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9511:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9511:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9511:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "9523:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "9493:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9493:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "EmitStatement",
												"src": "9488:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9561:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9578:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9570:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9570:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9570:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "9582:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "9541:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9541:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "9541:48:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "8706:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9029:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "9035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9060:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "9052:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9052:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9034:33:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9085:0:1"
									},
									"scope": 650,
									"src": "9020:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "10132:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "10150:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10167:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10159:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 594,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10159:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10159:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10150:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10171:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10142:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10142:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "10142:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "10228:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10247:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10239:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 604,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10239:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10239:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10228:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10251:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10220:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10220:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "10220:68:1"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "10299:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "10311:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10299:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "10318:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10299:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "10329:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10299:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "10299:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10359:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "10366:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "10375:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "10350:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "EmitStatement",
												"src": "10345:37:1"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "9602:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10028:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10054:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10046:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10102:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10094:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10036:78:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10132:0:1"
									},
									"scope": 650,
									"src": "10019:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "11092:2:1",
										"statements": []
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10395:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10982:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11020:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "11012:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11042:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "11034:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11062:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "11054:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11002:72:1"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11092:0:1"
									},
									"scope": 650,
									"src": "10973:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "11800:2:1",
										"statements": []
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "11100:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11691:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11728:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11720:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11750:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11742:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11742:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11770:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "11762:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11710:72:1"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11800:0:1"
									},
									"scope": 650,
									"src": "11682:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 651,
							"src": "1388:10416:1",
							"usedErrors": []
						}
					],
					"src": "90:11715:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							728
						]
					},
					"id": 729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 653,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 728,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 728,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 728,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 728,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 728,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 728,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 718,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 727,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 729,
							"src": "187:2596:2",
							"usedErrors": []
						}
					],
					"src": "91:2693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							753
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 729,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 733,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "305:6:3"
									},
									"id": 734,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 753,
							"linearizedBaseContracts": [
								753,
								728
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 753,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 753,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 749,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 753,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 754,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 761,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 760,
												"id": 763,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 775,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 770,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 769,
												"id": 772,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 775,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 776,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1087
						]
					},
					"id": 1088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 778,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1087,
							"linearizedBaseContracts": [
								1087
							],
							"name": "SafeMath",
							"nameLocation": "475:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "702:140:5",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "712:124:5",
												"statements": [
													{
														"assignments": [
															791
														],
														"declarations": [
															{
																"constant": false,
																"id": 791,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 808,
																"src": "736:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 790,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 795,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 792,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "748:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 793,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "752:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 796,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "771:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 797,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "775:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 803,
														"nodeType": "IfStatement",
														"src": "767:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 789,
															"id": 802,
															"nodeType": "Return",
															"src": "778:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 805,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "823:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 806,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 789,
														"id": 807,
														"nodeType": "Return",
														"src": "809:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "642:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "653:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:5"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "687:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:5"
									},
									"scope": 1087,
									"src": "626:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "1064:113:5",
										"statements": [
											{
												"id": 836,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 822,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "1102:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 823,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "1106:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 829,
														"nodeType": "IfStatement",
														"src": "1098:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 821,
															"id": 828,
															"nodeType": "Return",
															"src": "1109:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 831,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "1154:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 832,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "1158:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 834,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 821,
														"id": 835,
														"nodeType": "Return",
														"src": "1140:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1004:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1015:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1049:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1055:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:5"
									},
									"scope": 1087,
									"src": "988:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "1401:417:5",
										"statements": [
											{
												"id": 878,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 850,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "1669:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 857,
														"nodeType": "IfStatement",
														"src": "1665:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 855,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 849,
															"id": 856,
															"nodeType": "Return",
															"src": "1677:16:5"
														}
													},
													{
														"assignments": [
															859
														],
														"declarations": [
															{
																"constant": false,
																"id": 859,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 878,
																"src": "1707:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 858,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 863,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "1719:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 861,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "1723:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "1742:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 865,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "1746:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 867,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "1751:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "1738:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 871,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 849,
															"id": 872,
															"nodeType": "Return",
															"src": "1754:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 875,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "1799:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 876,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 849,
														"id": 877,
														"nodeType": "Return",
														"src": "1785:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1341:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1352:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:5"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1386:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1392:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:5"
									},
									"scope": 1087,
									"src": "1325:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2043:114:5",
										"statements": [
											{
												"id": 906,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 892,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "2081:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 899,
														"nodeType": "IfStatement",
														"src": "2077:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 891,
															"id": 898,
															"nodeType": "Return",
															"src": "2089:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 901,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "2134:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "2138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 904,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 891,
														"id": 905,
														"nodeType": "Return",
														"src": "2120:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1994:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2028:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 887,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2034:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 1087,
									"src": "1967:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "2392:114:5",
										"statements": [
											{
												"id": 934,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 920,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "2430:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 927,
														"nodeType": "IfStatement",
														"src": "2426:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 919,
															"id": 926,
															"nodeType": "Return",
															"src": "2438:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 929,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "2483:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 930,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "2487:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 932,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 919,
														"id": 933,
														"nodeType": "Return",
														"src": "2469:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2332:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2343:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "2383:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:5"
									},
									"scope": 1087,
									"src": "2316:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "2808:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 946,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "2825:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 947,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "2829:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 949,
												"nodeType": "Return",
												"src": "2818:12:5"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2754:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2765:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:5"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2799:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:5"
									},
									"scope": 1087,
									"src": "2741:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "3175:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "3192:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 962,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3196:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 960,
												"id": 964,
												"nodeType": "Return",
												"src": "3185:12:5"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3121:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3132:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3166:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:5"
									},
									"scope": 1087,
									"src": "3108:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "3518:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 976,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3535:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 977,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "3539:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 975,
												"id": 979,
												"nodeType": "Return",
												"src": "3528:12:5"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3464:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3475:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:5"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3509:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:5"
									},
									"scope": 1087,
									"src": "3451:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "3903:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 991,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "3920:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 992,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "3924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 990,
												"id": 994,
												"nodeType": "Return",
												"src": "3913:12:5"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "3849:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "3860:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:5"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "3894:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:5"
									},
									"scope": 1087,
									"src": "3836:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "4452:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1006,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "4469:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1007,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "4473:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1005,
												"id": 1009,
												"nodeType": "Return",
												"src": "4462:12:5"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4398:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4409:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:5"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4443:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:5"
									},
									"scope": 1087,
									"src": "4385:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "5070:106:5",
										"statements": [
											{
												"id": 1034,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1024,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "5112:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1025,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "5117:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1027,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "5120:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1023,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1029,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "5154:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1031,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "5158:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1022,
														"id": 1033,
														"nodeType": "Return",
														"src": "5147:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4967:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "4986:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "5005:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:5"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "5061:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:5"
									},
									"scope": 1087,
									"src": "4945:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "5785:105:5",
										"statements": [
											{
												"id": 1059,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1049,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "5827:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1052,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "5834:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1048,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1054,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1055,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "5868:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "5872:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1047,
														"id": 1058,
														"nodeType": "Return",
														"src": "5861:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "5682:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "5701:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "5720:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1042,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:5"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "5776:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:5"
									},
									"scope": 1087,
									"src": "5660:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "6661:105:5",
										"statements": [
											{
												"id": 1084,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1074,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "6703:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1077,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "6710:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1073,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1079,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1080,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "6744:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1081,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "6748:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1072,
														"id": 1083,
														"nodeType": "Return",
														"src": "6737:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6558:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6577:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6596:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:5"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "6652:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:5"
									},
									"scope": 1087,
									"src": "6536:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1088,
							"src": "467:6301:5",
							"usedErrors": []
						}
					],
					"src": "92:6677:5"
				},
				"id": 5
			},
			"contracts/YERC20.sol": {
				"ast": {
					"absolutePath": "contracts/YERC20.sol",
					"exportedSymbols": {
						"YERC20": [
							1188
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "YERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1188,
							"linearizedBaseContracts": [
								1188
							],
							"name": "YERC20",
							"nameLocation": "70:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "84:64:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "161:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "198:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "197:9:6"
									},
									"scope": 1188,
									"src": "152:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "213:49:6",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "275:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "309:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1098,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "309:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:7:6"
									},
									"scope": 1188,
									"src": "266:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "322:47:6",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "382:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "414:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:15:6"
									},
									"scope": 1188,
									"src": "373:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "435:43:6",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "491:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:6"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "521:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1110,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "521:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:15:6"
									},
									"scope": 1188,
									"src": "482:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "542:50:6",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 1119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "605:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:2:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "639:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:6"
									},
									"scope": 1188,
									"src": "596:52:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "654:70:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "737:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "755:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "747:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:17:6"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:9:6"
									},
									"scope": 1188,
									"src": "728:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "802:203:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1018:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1035:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1027:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1054:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1046:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:35:6"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1080:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1080:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:6:6"
									},
									"scope": 1188,
									"src": "1009:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "1092:258:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1363:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1381:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1373:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1397:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1389:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:33:6"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1429:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:9:6"
									},
									"scope": 1188,
									"src": "1354:84:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "1444:629:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2086:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2102:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2094:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2111:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:33:6"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2145:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2145:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:6:6"
									},
									"scope": 1188,
									"src": "2077:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "2157:288:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2458:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2479:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2471:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2495:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2487:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2514:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2506:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:51:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2540:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2540:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:6:6"
									},
									"scope": 1188,
									"src": "2449:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "2552:153:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1178,
									"name": "Transfer",
									"nameLocation": "2715:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2740:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2724:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2762:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2746:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2766:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2723:57:6"
									},
									"src": "2709:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "2787:145:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1187,
									"name": "Approval",
									"nameLocation": "2942:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2967:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2951:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2974:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3007:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2999:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2950:63:6"
									},
									"src": "2936:78:6"
								}
							],
							"scope": 1189,
							"src": "60:2957:6",
							"usedErrors": []
						}
					],
					"src": "33:2985:6"
				},
				"id": 6
			},
			"contracts/YNPresalePair.sol": {
				"ast": {
					"absolutePath": "contracts/YNPresalePair.sol",
					"exportedSymbols": {
						"Context": [
							775
						],
						"ERC20": [
							650
						],
						"IERC20": [
							728
						],
						"IERC20Metadata": [
							753
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							1087
						],
						"YERC20": [
							1188
						],
						"YNPresalePair": [
							1557
						]
					},
					"id": 1558,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 651,
							"src": "60:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/YERC20.sol",
							"file": "./YERC20.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 1189,
							"src": "117:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 105,
							"src": "141:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1558,
							"sourceUnit": 1088,
							"src": "195:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1195,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 650,
										"src": "282:5:7"
									},
									"id": 1196,
									"nodeType": "InheritanceSpecifier",
									"src": "282:5:7"
								},
								{
									"baseName": {
										"id": 1197,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "289:7:7"
									},
									"id": 1198,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:7"
								}
							],
							"canonicalName": "YNPresalePair",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1557,
							"linearizedBaseContracts": [
								1557,
								104,
								650,
								753,
								728,
								775
							],
							"name": "YNPresalePair",
							"nameLocation": "265:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1201,
									"libraryName": {
										"id": 1199,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1087,
										"src": "312:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "306:27:7",
									"typeName": {
										"id": 1200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1204,
									"mutability": "mutable",
									"name": "_buyFee",
									"nameLocation": "349:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "341:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "357:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1207,
									"mutability": "mutable",
									"name": "_saleFee",
									"nameLocation": "373:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "365:18:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "365:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "382:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1214,
									"mutability": "mutable",
									"name": "ETH",
									"nameLocation": "398:3:7",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "390:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "390:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 1213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1209,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "402:1:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1212,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1210,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "406:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1211,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "412:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "406:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "402:12:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1217,
									"mutability": "mutable",
									"name": "_maxBuy",
									"nameLocation": "431:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "423:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "423:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "439:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1220,
									"mutability": "mutable",
									"name": "_maxSale",
									"nameLocation": "455:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "447:18:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "447:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1219,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "464:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1223,
									"mutability": "mutable",
									"name": "_decimal",
									"nameLocation": "478:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1557,
									"src": "472:17:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1221,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "472:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "487:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "626:235:7",
										"statements": [
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "637:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1242,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "653:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1241,
																	"name": "YERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "646:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_YERC20_$1188_$",
																		"typeString": "type(contract YERC20)"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "646:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_YERC20_$1188",
																	"typeString": "contract YERC20"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1101,
															"src": "646:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "646:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "637:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "637:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "687:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "687:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "maxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "699:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "711:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1253,
																	"name": "_decimal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "717:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "711:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "699:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1248,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "681:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "681:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "681:45:7"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1258,
														"name": "_buyFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "737:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1259,
															"name": "ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "745:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1260,
															"name": "amountPerETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "751:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "745:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "737:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "737:26:7"
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1264,
														"name": "_saleFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "774:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1265,
															"name": "ETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "783:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1266,
															"name": "amountPerETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "789:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "783:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "774:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "774:27:7"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1270,
														"name": "_maxBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "812:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1271,
														"name": "maxBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "820:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "812:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "812:14:7"
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1274,
														"name": "_maxSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "837:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1275,
														"name": "maxSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "846:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "837:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "837:16:7"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "59756b692050726573616c652050616972",
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "595:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fa0e1677a107f819d0249a822242407d50b24feafbdb2a9b97a9c3b0cb9842c9",
														"typeString": "literal_string \"Yuki Presale Pair\""
													},
													"value": "Yuki Presale Pair"
												},
												{
													"hexValue": "594e2d505073",
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "616:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3dcdbf92293fddeccba07aaeef262ca64df8865d8ce46f4d388db0a47a012af0",
														"typeString": "literal_string \"YN-PPs\""
													},
													"value": "YN-PPs"
												}
											],
											"id": 1238,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1235,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 650,
												"src": "589:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "589:36:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "518:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "510:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "532:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "524:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "amountPerETH",
												"nameLocation": "550:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "542:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "maxBuy",
												"nameLocation": "568:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "563:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "563:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "maxSale",
												"nameLocation": "580:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "575:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "575:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:79:7"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:0:7"
									},
									"scope": 1557,
									"src": "498:363:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "934:34:7",
										"statements": [
											{
												"expression": {
													"id": 1285,
													"name": "_decimal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1223,
													"src": "952:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1286,
												"nodeType": "Return",
												"src": "945:15:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "878:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "909:8:7"
									},
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "927:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1282,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "927:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:7:7"
									},
									"scope": 1557,
									"src": "869:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1050:51:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "1082:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "1087:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1297,
														"name": "_transferTokenToUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1061:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1061:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "1061:32:7"
											}
										]
									},
									"functionSelector": "4664ffea",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1294,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1040:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1040:9:7"
										}
									],
									"name": "transferTokenToUser",
									"nameLocation": "985:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1013:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1005:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1026:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1018:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:28:7"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:0:7"
									},
									"scope": 1557,
									"src": "976:125:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "1175:150:7",
										"statements": [
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "yerc20",
														"nameLocation": "1193:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "1186:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_YERC20_$1188",
															"typeString": "contract YERC20"
														},
														"typeName": {
															"id": 1311,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1310,
																"name": "YERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1188,
																"src": "1186:6:7"
															},
															"referencedDeclaration": 1188,
															"src": "1186:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_YERC20_$1188",
																"typeString": "contract YERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1316,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1215:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																		"typeString": "contract YNPresalePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																		"typeString": "contract YNPresalePair"
																	}
																],
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1314,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1313,
														"name": "YERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1200:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_YERC20_$1188_$",
															"typeString": "type(contract YERC20)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_YERC20_$1188",
														"typeString": "contract YERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1186:35:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1321,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "1240:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1326,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1272:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																					"typeString": "contract YNPresalePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																					"typeString": "contract YNPresalePair"
																				}
																			],
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1264:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1324,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1264:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1264:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1322,
																		"name": "yerc20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "1247:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_YERC20_$1188",
																			"typeString": "contract YERC20"
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1127,
																	"src": "1247:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1247:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1240:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1232:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1232:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "1232:47:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "1306:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1336,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "1311:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1332,
															"name": "yerc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "1290:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_YERC20_$1188",
																"typeString": "contract YERC20"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1137,
														"src": "1290:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "1290:27:7"
											}
										]
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokenToUser",
									"nameLocation": "1118:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1147:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "1139:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1160:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "1152:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:28:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:0:7"
									},
									"scope": 1557,
									"src": "1109:216:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "1364:566:7",
										"statements": [
											{
												"assignments": [
													1345
												],
												"declarations": [
													{
														"constant": false,
														"id": 1345,
														"mutability": "mutable",
														"name": "yerc20",
														"nameLocation": "1400:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "1393:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_YERC20_$1188",
															"typeString": "contract YERC20"
														},
														"typeName": {
															"id": 1344,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1343,
																"name": "YERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1188,
																"src": "1393:6:7"
															},
															"referencedDeclaration": 1188,
															"src": "1393:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_YERC20_$1188",
																"typeString": "contract YERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1349,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1422:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																		"typeString": "contract YNPresalePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																		"typeString": "contract YNPresalePair"
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1414:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1414:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1414:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1346,
														"name": "YERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1407:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_YERC20_$1188_$",
															"typeString": "type(contract YERC20)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_YERC20_$1188",
														"typeString": "contract YERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1393:35:7"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "val",
														"nameLocation": "1464:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "1456:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1456:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1357,
												"initialValue": {
													"expression": {
														"id": 1355,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1468:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "1468:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1456:21:7"
											},
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "tokenGet",
														"nameLocation": "1505:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "1497:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1497:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"arguments": [
														{
															"id": 1369,
															"name": "_buyFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "1546:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "31",
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1522:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1526:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 1364,
																			"name": "_decimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1223,
																			"src": "1532:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1526:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1522:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1360,
																	"name": "val",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "1514:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 981,
																"src": "1514:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1514:27:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 996,
														"src": "1514:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1497:57:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "tokenGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "1568:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1373,
														"name": "_maxBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "1580:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1568:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "1835:88:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1404,
																			"name": "val",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "1858:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1405,
																			"name": "_maxBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "1863:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1858:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "594e50726573616c653a20414d4f554e542053414c4520414d4f554e54204558434545442e",
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1871:39:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c3c8d199788da4990dbbb010fe130b4cb5edb87bf34f6bb2211ae01d42d4f2d7",
																			"typeString": "literal_string \"YNPresale: AMOUNT SALE AMOUNT EXCEED.\""
																		},
																		"value": "YNPresale: AMOUNT SALE AMOUNT EXCEED."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c3c8d199788da4990dbbb010fe130b4cb5edb87bf34f6bb2211ae01d42d4f2d7",
																			"typeString": "literal_string \"YNPresale: AMOUNT SALE AMOUNT EXCEED.\""
																		}
																	],
																	"id": 1403,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1850:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1850:61:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "1850:61:7"
														}
													]
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "1565:358:7",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "1588:233:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1375,
																	"name": "tokenGet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "1606:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1380,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1641:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																						"typeString": "contract YNPresalePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																						"typeString": "contract YNPresalePair"
																					}
																				],
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1633:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1378,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1633:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1633:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1376,
																			"name": "yerc20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "1616:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_YERC20_$1188",
																				"typeString": "contract YERC20"
																			}
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "1616:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1616:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1606:41:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1400,
																"nodeType": "Block",
																"src": "1742:68:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1397,
																					"name": "val",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1354,
																					"src": "1790:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1393,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "1769:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1394,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "1769:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1392,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1761:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 1391,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1761:8:7",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1395,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1761:19:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "1761:28:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1761:33:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1399,
																		"nodeType": "ExpressionStatement",
																		"src": "1761:33:7"
																	}
																]
															},
															"id": 1401,
															"nodeType": "IfStatement",
															"src": "1603:207:7",
															"trueBody": {
																"id": 1390,
																"nodeType": "Block",
																"src": "1648:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1385,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1688:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1688:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1387,
																					"name": "tokenGet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "1699:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1384,
																				"name": "_transferTokenToUser",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1340,
																				"src": "1667:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1667:41:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1389,
																		"nodeType": "ExpressionStatement",
																		"src": "1667:41:7"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "1342:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:7"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:7"
									},
									"scope": 1557,
									"src": "1333:597:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										224
									],
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "2030:676:7",
										"statements": [
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "ret",
														"nameLocation": "2054:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "2049:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1423,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2049:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"arguments": [
														{
															"id": 1427,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2074:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "2085:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1425,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2059:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_YNPresalePair_$1557_$",
																"typeString": "type(contract super YNPresalePair)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "2059:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2049:43:7"
											},
											{
												"assignments": [
													1432
												],
												"declarations": [
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "val",
														"nameLocation": "2121:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "2113:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2113:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"initialValue": {
													"id": 1433,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1417,
													"src": "2125:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2113:18:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1435,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "2155:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1438,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2174:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																	"typeString": "contract YNPresalePair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																	"typeString": "contract YNPresalePair"
																}
															],
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2166:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1436,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2166:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2166:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2155:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1497,
												"nodeType": "IfStatement",
												"src": "2152:506:7",
												"trueBody": {
													"id": 1496,
													"nodeType": "Block",
													"src": "2180:478:7",
													"statements": [
														{
															"assignments": [
																1442
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1442,
																	"mutability": "mutable",
																	"name": "tokenGet",
																	"nameLocation": "2203:8:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1496,
																	"src": "2195:16:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1441,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2195:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1454,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2234:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2238:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1450,
																				"name": "_decimal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1223,
																				"src": "2244:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2238:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2234:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1445,
																				"name": "_saleFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1207,
																				"src": "2220:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1443,
																				"name": "val",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "2212:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 981,
																			"src": "2212:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2212:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 996,
																	"src": "2212:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2212:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2195:58:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1455,
																	"name": "val",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "2271:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1456,
																	"name": "_maxSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "2278:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2271:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1494,
																"nodeType": "Block",
																"src": "2553:94:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1490,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1488,
																						"name": "val",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1432,
																						"src": "2580:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 1489,
																						"name": "_maxSale",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1220,
																						"src": "2585:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2580:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "594e50726573616c653a204d41582053414c4520414d4f554e54204558434545442e",
																					"id": 1491,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2594:36:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9cc364fbb957022b589cc43a728c90253961f2903402929b90452f721ba4a228",
																						"typeString": "literal_string \"YNPresale: MAX SALE AMOUNT EXCEED.\""
																					},
																					"value": "YNPresale: MAX SALE AMOUNT EXCEED."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_9cc364fbb957022b589cc43a728c90253961f2903402929b90452f721ba4a228",
																						"typeString": "literal_string \"YNPresale: MAX SALE AMOUNT EXCEED.\""
																					}
																				],
																				"id": 1487,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "2572:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2572:59:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1493,
																		"nodeType": "ExpressionStatement",
																		"src": "2572:59:7"
																	}
																]
															},
															"id": 1495,
															"nodeType": "IfStatement",
															"src": "2268:379:7",
															"trueBody": {
																"id": 1486,
																"nodeType": "Block",
																"src": "2287:248:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1458,
																				"name": "tokenGet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1442,
																				"src": "2309:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1461,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2327:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																								"typeString": "contract YNPresalePair"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																								"typeString": "contract YNPresalePair"
																							}
																						],
																						"id": 1460,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2319:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1459,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2319:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2319:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balance",
																				"nodeType": "MemberAccess",
																				"src": "2319:21:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2309:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1484,
																			"nodeType": "Block",
																			"src": "2444:76:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1481,
																								"name": "val",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1432,
																								"src": "2496:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1477,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "2475:3:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 1478,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "2475:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1476,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "2467:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 1475,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "2467:8:7",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1479,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2467:19:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 1480,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"src": "2467:28:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1482,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2467:33:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1483,
																					"nodeType": "ExpressionStatement",
																					"src": "2467:33:7"
																				}
																			]
																		},
																		"id": 1485,
																		"nodeType": "IfStatement",
																		"src": "2306:214:7",
																		"trueBody": {
																			"id": 1474,
																			"nodeType": "Block",
																			"src": "2341:81:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1471,
																								"name": "tokenGet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1442,
																								"src": "2393:8:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1467,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "2372:3:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 1468,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "2372:10:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1466,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "2364:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 1465,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "2364:8:7",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1469,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2364:19:7",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 1470,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"src": "2364:28:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2364:38:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1473,
																					"nodeType": "ExpressionStatement",
																					"src": "2364:38:7"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1498,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1424,
													"src": "2695:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1499,
												"nodeType": "Return",
												"src": "2688:10:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1947:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2006:8:7"
									},
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1964:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1956:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1983:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1975:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:35:7"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "2024:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2024:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:6:7"
									},
									"scope": 1557,
									"src": "1938:768:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "2777:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1509,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "2796:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1512,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2811:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																				"typeString": "contract YNPresalePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																				"typeString": "contract YNPresalePair"
																			}
																		],
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2803:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1510,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2803:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2803:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2803:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2796:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2788:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2788:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "2788:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "2862:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1520,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "2844:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2844:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2836:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2836:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2836:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2836:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "2836:32:7"
											}
										]
									},
									"functionSelector": "715994e3",
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1506,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1505,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2767:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2767:9:7"
										}
									],
									"name": "transferBalanceToYuki",
									"nameLocation": "2723:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "2753:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2745:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2744:15:7"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2777:0:7"
									},
									"scope": 1557,
									"src": "2714:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "2964:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1538,
																"name": "money",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "2983:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1541,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2998:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																				"typeString": "contract YNPresalePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_YNPresalePair_$1557",
																				"typeString": "contract YNPresalePair"
																			}
																		],
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2990:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2990:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2990:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2990:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2983:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2975:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "2975:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "money",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "3046:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1549,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "3031:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3023:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3023:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3023:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3023:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3023:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "3023:29:7"
											}
										]
									},
									"functionSelector": "0510a5b3",
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1535,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1534,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2954:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2954:9:7"
										}
									],
									"name": "transferBalanceToUser",
									"nameLocation": "2897:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2927:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2919:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "2940:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2932:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:28:7"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:7"
									},
									"scope": 1557,
									"src": "2888:172:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1558,
							"src": "256:2807:7",
							"usedErrors": []
						}
					],
					"src": "33:3030:7"
				},
				"id": 7
			}
		}
	}
}